<?xml version="1.0" encoding="utf-8"?>
<search>
  
  
  
  <entry>
    <title>提问的智慧</title>
    <link href="/2022/05/11/%E6%8F%90%E9%97%AE%E7%9A%84%E6%99%BA%E6%85%A7/"/>
    <url>/2022/05/11/%E6%8F%90%E9%97%AE%E7%9A%84%E6%99%BA%E6%85%A7/</url>
    
    <content type="html"><![CDATA[<h1 id="提问的智慧">提问的智慧</h1><h4 id="艾瑞克.史蒂文.雷蒙德eric-steven-raymond">艾瑞克.史蒂文.雷蒙德（Eric Steven Raymond）</h4><p>Thyrsus Enterprises</p><p><a href="mailto:esr@thyrsus.com" class="email">esr@thyrsus.com</a> #### 瑞克.莫恩（Rick Moen）</p><p><a href="mailto:respond-auto@linuxmafia.com" class="email">respond-auto@linuxmafia.com</a> 版权©2001, 2006 Eric S. Raymond, Rick Moen</p><h3 id="修订历史">修订历史</h3><figure class="highlight dns"><table><tr><td class="gutter"><div class="code-wrapper"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></div></td><td class="code"><pre><code class="hljs dns">修订版 <span class="hljs-number">3.92013</span>年<span class="hljs-number">4</span>月<span class="hljs-number">23</span>日esr<br>修正链接<br>修订版 <span class="hljs-number">3.82012</span>年<span class="hljs-number">6</span>月<span class="hljs-number">19</span>日esr<br>修正链接<br>修订版 <span class="hljs-number">3.72010</span>年<span class="hljs-number">12</span>月<span class="hljs-number">6</span>日esr<br>对于英语为第二语言人士的有益建议<br>修订版 <span class="hljs-number">3.72010</span>年<span class="hljs-number">11</span>月<span class="hljs-number">2</span>日esr<br>几种翻译不见了<br>修订版 <span class="hljs-number">3.62008</span>年<span class="hljs-number">3</span>月<span class="hljs-number">19</span>日esr<br>小更新及新链接<br>修订版 <span class="hljs-number">3.52008</span>年<span class="hljs-number">1</span>月<span class="hljs-number">2</span>日esr<br>勘误及一些翻译链接<br>修订版 <span class="hljs-number">3.42007</span>年<span class="hljs-number">3</span>月<span class="hljs-number">24</span>日esr<br>新章节：“关于代码的问题”<br>修订版 <span class="hljs-number">3.32006</span>年<span class="hljs-number">9</span>月<span class="hljs-number">29</span>日esr<br>增加凯.尼格曼（Kai Niggemann）的一个好建议<br>修订版 <span class="hljs-number">3.22006</span>年<span class="hljs-number">1</span>月<span class="hljs-number">10</span>日esr<br>加入瑞克.莫恩（Rick Moen）编写的内容<br>修订版 <span class="hljs-number">3.12004</span>年<span class="hljs-number">10</span>月<span class="hljs-number">28</span>日esr<br>文档“谷歌是你的朋友！”<br>修订版 <span class="hljs-number">3.02004</span>年<span class="hljs-number">2</span>月<span class="hljs-number">2</span>日esr<br>主要新增在网页论坛应有的礼节<br></code></pre></td></tr></table></figure><h3 id="原文how-to-ask-questions-the-smart-way"><a href="http://www.catb.org/~esr/faqs/smart-questions.html">原文：How To Ask Questions The Smart Way</a></h3><p>翻译：王刚 &lt;yafrank at 126 dot com &gt;<br />时间：2013年10月26日 内容</p><h3 id="目录">目录</h3><ul><li><a href="#弃权申明">弃权申明</a></li><li><a href="#引言">引言</a></li><li><a href="#提问前">提问前</a></li><li><a href="#提问时">提问时</a><ul><li><a href="#仔细挑选论坛">仔细挑选论坛</a></li><li><a href="#面向新手的论坛和互联网中继聊天irc通常响应最快">面向新手的论坛和互联网中继聊天（IRC）通常响应最快</a></li><li><a href="#第二步使用项目的邮件列表">第二步，使用项目的邮件列表</a></li><li><a href="#使用有意义且明确的主题">使用有意义且明确的主题</a></li><li><a href="#使问题容易回复">使问题容易回复</a></li><li><a href="#用清晰语法拼写正确的语句书写">用清晰、语法、拼写正确的语句书写</a></li><li><a href="#使用易于读取且标准的文件格式发送问题">使用易于读取且标准的文件格式发送问题</a></li><li><a href="#描述问题应准确且有内容">描述问题应准确且有内容</a></li><li><a href="#量不在多精炼则灵">量不在多，精炼则灵</a></li><li><a href="#别急于宣称找到Bug">别急于宣称找到Bug</a></li><li><a href="#低声下气代替不了做自己的家庭作业">低声下气代替不了做自己的家庭作业</a></li><li><a href="#描述问题症状而不是猜测">描述问题症状而不是猜测</a></li><li><a href="#按时间先后罗列问题症状">按时间先后罗列问题症状</a></li><li><a href="#描述目标而不是过程">描述目标而不是过程</a></li><li><a href="#别要求私下回复电邮">别要求私下回复电邮</a></li><li><a href="#提问应明确">提问应明确</a></li><li><a href="#关于代码的问题">关于代码的问题</a></li><li><a href="#别张贴家庭作业式问题">别张贴家庭作业式问题</a></li><li><a href="#删除无意义的要求">删除无意义的要求</a></li><li><a href="#不要把问题标记为紧急即使对你而言的确如此">不要把问题标记为“紧急”，即使对你而言的确如此</a></li><li><a href="#礼貌总是有益的">礼貌总是有益的</a></li><li><a href="#礼貌总是有益的">问题解决后追加一条简要说明</a></li></ul></li><li><a href="#如何解读回答">如何解读回答</a><ul><li><a href="#读读该死的手册rtfm和搜搜该死的网络stfw如何明白你已完全搞砸">“读读该死的手册”（RTFM）和“搜搜该死的网络”（STFW）：如何明白你已完全搞砸</a></li><li><a href="#如果还不明白">如果还不明白……</a></li><li><a href="#对待无礼">对待无礼</a></li></ul></li><li><a href="#别象失败者那样反应">别象失败者那样反应</a></li><li><a href="#别象失败者那样反应">提问禁忌</a></li><li><a href="#好问题与坏问题">好问题与坏问题</a></li><li><a href="#如果得不到回答">如果得不到回答</a></li><li><a href="#如何更好地回答">如何更好地回答</a></li><li><a href="#相关资源">相关资源</a></li><li><a href="#鸣谢">鸣谢</a></li></ul><blockquote><p>译文： 印尼语 白俄罗斯语 巴西葡萄牙语 简体中文 荷兰语 法语 乔治亚语 德语 希腊语 希伯来语 日语 波兰语 葡萄牙语 罗马尼亚语 俄语 西班牙语 泰语 如果你想复制、镜像、翻译或引用本文，请参阅我的 复制协议。</p></blockquote><h3 id="弃权申明">弃权申明</h3><p>许多项目的网站在如何取得帮助的部分链接了本文，这没有关系，也正是我们想要的。但如果你是该项目生成此链接的网管，请在链接附近显著位置注明：我们不提供该项目的服务支持！</p><p>我们已经领教了没有此说明带来的痛苦，我们将不停地被一些白痴纠缠，他们认为既然我们发布了本文，那么我们就有责任解决世上所有的技术问题。</p><p>如果你是因为需要帮助正在阅读本文，然后就带着可以直接从作者那取得帮助的印象离开，那么 你 就不幸成了我们所说的白痴之一。 别向 我们 提问，我们不会理睬的。 我们只是在这教你如何从那些真正懂得你软硬件问题的人那里取得帮助，但 99.9％ 的时间我们不会是那些人。除非你非常地 确定 本文的作者是你遇到问题方面的专家，请不要打搅，这样大家都更开心一点。</p><h3 id="引言">引言</h3><p>在 黑客 的世界里，你所提技术问题的解答很大程度上取决于你提问的方式与解决此问题的难度，本文将教你如何提问才更有可能得到满意的答复。</p><p>开源程序的应用已经很广，你通常可以从其他更有经验的用户而不是黑客那里得到解答。这是好事，他们一般对新手常有的毛病更容忍一点。然尔，使用我们推荐的方法，象对待黑客那样对待这些有经验的用户，通常能最有效地得到问题的解答。</p><p>第一件需要明白的事是黑客喜欢难题和激发思考的好问题。假如不是这样，我们也不会写本文了。如果你能提出一个有趣的问题让我们咀嚼玩味，我们会感激你。好问题是种激励与礼物，帮助我们发展认知，揭示没有注意或想到的问题。在黑客中，“好问题！” 是非常热烈而真挚的赞许。</p><p>此外，黑客还有遇到简单问题就表现出敌视或傲慢的名声。有时，我们看起来还对新手和愚蠢的家伙有条件反射式的无礼，但事情并不真是这样。</p><p>我们只是毫无歉意地敌视那些提问前不愿思考、不做自己家庭作业的人。这种人就象时间无底洞──他们只知道索取，不愿意付出，他们浪费了时间，这些时间本可用于其它更有趣的问题或更值得回答的人。我们将这种人叫做 “失败者（loser）” （由于历史原因，我们有时将“loser”拼写为“lusers” 。）</p><p>我们意识到许多人只是想使用我们写的软件，他们对学习技术细节没有兴趣。对大多数人而言，计算机只是种工具，是种达到目的的手段而已。他们有自己的生活并且有更要紧的事要做，我们承认这点，也从不指望每个人都对这些让我们着迷的技术问题感兴趣。不过，我们回答问题的风格是为了适应那些真正对此有兴趣并愿意主动参与解决问题的人，这一点不会变，也不该变。如果连这都变了，我们就会在自己能做得最好的事情上不再那么犀利。</p><p>我们（大多数）是自愿者， 从自己繁忙的生活中抽时间来回答问题，有时会力不从心。因此，我们会毫不留情地滤除问题，特别是那些看起来象是失败者提的，以便更有效地把回答问题的时间留给那些胜利者。</p><p>如果你认为这种态度令人反感、以施惠者自居或傲慢自大，请检查你的假设，我们并未要求你屈服──事实上，假如你做了该做的努力，我们中的大多数将非常乐意平等地与你交流，并欢迎你接纳我们的文化。试图去帮助那些不愿自救的人对我们简直没有效率。不懂没有关系，但愚蠢地做事不行。</p><p>所以，你不必在技术上很在行才能吸引我们的注意，但你 必须 表现出能引导你在行的姿态──机 敏、有想法、善于观察、乐于主动参与问题的解决。如果你做不到这些使你与众不同的事情，我们建议你付钱跟别人签商业服务合同，而不是要求黑客无偿帮助。</p><p>如果你决定向我们求助，你不会想成为一名失败者，你也不想被看成一个失败者。得到快速有效回答的最好方法是使提问者看起来象个聪明、自信和有想法的人，并且暗示只是碰巧在某一特别问题上需要帮助。</p><p>（欢迎对本文指正，可以将建议发至 esr@thyrsus.com 或 respond-auto@linuxmafia.com。 请注意，本文不想成为一般性的 网络礼仪 指南，我一般会拒绝那些与引出技术论坛中有用的回答不特别相关的建议。）</p><h3 id="提问前">提问前</h3><p>在通过电邮、新闻组或论坛提技术问题以前，做以下事情：</p><ul><li>尝试在你准备提问论坛的历史文档中搜索答案</li><li>尝试搜索互联网以找到答案</li><li>尝试阅读手册以找到答案</li><li>尝试阅读“常见问题文档”（FAQ）以找到答案</li><li>尝试自己检查或试验以找到答案</li><li>尝试请教懂行的朋友以找到答案</li><li>如果你是程序员，尝试阅读源代码以找到答案</li></ul><p>提问时，请先表明你已做了上述事情，这将有助于建立你不是寄生虫与浪费别人时间的印象。最好再表述你从中 学到的东西 ，我们喜欢回答那些表现出能从答案中学习的人。</p><p>运用某些策略，比如用谷歌（Google）搜索你遇到的各种错误提示（既搜索 谷歌论坛，也搜索网页）， 这样很可能直接就找到了解决问题的文档或邮件列表线索。 即使没有结果，在邮件列表或新闻组寻求帮助时提一句“我在谷歌中搜过下列句子但没有找到什么有用的东西” 也是件好事，至少它表明了搜索引擎不能提供哪些帮助。将搜索关键词与你的问题及可能的解决方案联系起来，还有助于引导其他有类似问题的人。</p><p>别着急，不要指望几秒钟的谷歌搜索就能解决一个复杂的问题。读一下常见问题文档。在向专家提问之前，先向后靠靠放松一下，再思考一下问题。相信我们，他们能从你的提问看出你做了多少阅读与思考，如果你是有备而来，将更有可能得到解答。不要将所有问题一股脑抛出，只因你的第一次搜索没有结果（或者结果太多）。</p><p>认真地思考，准备好你的问题。轻率的提问只能得到轻率的回答，或者压根没有。在提问时，你越是表现出在此前做过思考与努力去解决自己的问题，你越有可能得到真正的帮助。</p><p>注意别提错问题。如果提问基于错误的假设，某黑客多半会一边想 “愚蠢的问题……”，一边按将错就错的答案回复你，并且希望这种只是得到你自己“问的问题”而非真正所需的解答，给你一个教训。</p><p>永远不要假设你 有资格 得到解答。你没有这种资格，毕竟你没有为此服务付费。如果你能够提出有内容、有趣和激励思考的问题──那种毫无疑问能够向社区贡献经验，而不仅仅是消极地要求从别人那获取知识的问题，你将“挣到”答案。</p><p>另一方面，表明你有能力也乐意参与问题的解决是个很好的开端。“有没有人能指个方向？”，我这还差点什么？”，“我应该查哪个网站？”，通常要比 “请给出我可以用的完整步骤”更容易得到回复，因为你表明了只要有人能指个方向，你就很乐意完成剩下的过程。</p><h3 id="提问时">提问时</h3><h4 id="仔细挑选论坛">仔细挑选论坛</h4><p>要对在哪提问留心，如果你做了下述事情，多半会被一笔勾销或被看成“失败者”：</p><ul><li>张贴与论坛主题无关的问题</li><li>在面向高级技术问题的论坛上张贴肤浅的问题，或者反之。</li><li>在太多不同的新闻组同时张贴</li><li>给既非熟人也没有义务解决你问题的人发送你私人的电邮</li></ul><p>为保护通信的渠道不被无关的东西淹没，黑客会除掉那些没有找对地方的问题，你不会想让这种事落到自己头上的。</p><p>因此，第一步是找对论坛。谷歌和其它搜索引擎还是你的朋友，可以用它们搜索你遇到困难的软硬件问题最相关的项目网站。那里通常都有项目的常见问题（FAQ）、邮件列表及文档的链接。如果你的努力（包括 阅读 FAQ）都没有结果，这些邮件列表就是最后能取得帮助的地方。项目的网站也许还有报告Bug的流程或链接，如果是这样，去看看。</p><p>向陌生的人或论坛发送邮件极有可能是在冒险。譬如，不要假设一个内容丰富的网页的作者想充当你的免费顾问，不要对你的问题是否会受到欢迎做太乐观的估计──如果你不确定，向别处发或者压根别发。</p><p>在选择论坛、新闻组或邮件列表时，别太相信名字，先看看 FAQ 或者许可书以明确你的问题是否切题。发贴前先翻翻已有的帖子，这样可以让你感受一下那里行事的方式。事实上，张贴前在新闻组或邮件列表的历史文档中搜索与你问题相关的关键词是个极好的主意，也许就找到答案了。即使没有，也能帮助你归纳出更好的问题。</p><p>别象机关枪似的一次性“扫射”所有的帮助渠道，这就象大喊大叫一样会令人不快，温柔地一个一个来。</p><p>弄懂主题！最典型的错误之一是在某种致立于跨平台可移植的语言、库或工具的论坛中提关于 Unix 或 Windows 操作系统程序接口的问题。如果你不明白为什么这是大错，最好在搞清楚概念前什么也别问。</p><p>一般来说，在仔细挑选的公共论坛中提问比在私有论坛中提同样的问题更容易得到有用的回答。有几个道理支持这点，一是看潜在的回复者有多少，二是看论坛的参与者有多少，黑客更愿回答能启发多数人的问题。</p><p>可以理解，老练的黑客和一些流行软件的作者正在承受过多的不当消息。就象那根最后压垮骆驼背的稻草一样，你的加入也有可能使情况走向极端──已经好几次了，一些流行软件的作者退出了对自己软件的支持，因为伴随而来的涌入其私人邮箱的垃圾邮件变得无法忍受。</p><h4 id="面向新手的论坛和互联网中继聊天irc通常响应最快">面向新手的论坛和互联网中继聊天（IRC）通常响应最快</h4><p>本地的用户组织或者你所用的 Linux 发行版也许正在宣传新手取得帮助的论坛或 IRC 通道（在一些非英语国家，新手论坛很可能还是邮件列表），这些地方是开始提问的好去处，特别是当你觉得遇到的也许只是相对简单或者很普通的问题时。经过宣传的 IRC 通道是公开邀请提问的地方，通常可以得到实时的回复。</p><p>事实上，如果出问题的程序来自某发行版（这很常见），最好先去该发行版的论坛或邮件列表中提问，再到程序本身的项目论坛或邮件列表，（否则）该项目的黑客可能仅仅回复“用 我们的 代码”。</p><p>在任何论坛发贴以前，先看看有没有搜索功能。如果有，就试着用问题的几个关键词搜索一下，也许就有帮助。如果在此之前你已做过全面的网页搜索（你应该这样去做），还是再搜索一下论坛，搜索引擎有可能没来得及索引此论坛的全部内容。</p><p>通过论坛或 IRC 通道提供项目的用户支持有增长的趋势，电子邮件交流则更多地为项目开发者保留。所以先在论坛或 IRC 中寻求与该项目相关的帮助。</p><h4 id="第二步使用项目的邮件列表">第二步，使用项目的邮件列表</h4><p>当某个项目存在开发者邮件列表时，要向列表而不是其中的个别成员提问，即使你确信他能最好地回答你的问题。查一查项目的文档和主页，找到项目的邮件列表并使用它。采用这种办法有几个很好的理由：</p><ul><li>向个别开发者提的问题（如果）足够好，也将对整个项目组有益。相反，如果你认为自己的问题对整个项目组来说太愚蠢，这也不能成为骚扰个别开发者的理由。</li><li>向列表提问可以分散开发者的负担，个别开发者（尤其是项目领导）也许太忙以至于没法回答你的问题。</li><li>大多数邮件列表都要存档，那些存档将被搜索引擎索引，如果你向列表提问并得到解答，将来其它人可以通过网页搜索找到你的问题和答案，也就不用再次发问了。</li><li>如果某些问题经常被问到，开发者可以利用此信息改进文档或软件本身，以使其更清楚。如果只是私下提问，就没有人能看到最常见问题的完整场景。</li></ul><p>如果一个项目既有 “用户” 也有“开发者”（或 “黑客”）邮件列表或论坛，而你又不摆弄那些代码，向“用户”列表或论坛提问。不要假设自己会在开发者列表中受到欢迎，那些人多半会遭受你的噪音干扰。</p><p>然尔，如果你 确信 你的问题不一般，而且在“用户” 列表或论坛中几天都没有回复，可以试试“开发者”列表或论坛。建议你在张贴前最好先暗暗地观察几天,至少看看最近几天保存的帖子,以了解那的行事方式（事实上这是参与任何私有或半私有列表的好主意）</p><p>如果你找不到一个项目的邮件列表，而只能查到项目维护者的地址，只管向其发信。即便在这种情况下，也别假设（项目）邮件列表不存在。在你的电子邮件中陈述你已经试过但没有找到合适的邮件列表，也提及你不反对将自己的邮件转发给他人（许多人认为，即使没什么秘密，私人电子邮件也不应该被公开。通过允许将你的电子邮件转发他人，你给了相应人员处置你邮件的选择）。</p><h4 id="使用有意义且明确的主题">使用有意义且明确的主题</h4><p>在邮件列表、新闻组或论坛中，主题是你在五十个或更少的字以内吸引有资格专家注意的黄金机会，不要用诸如 “请帮我” （更别提大写的 “请帮我！！！！”，这种主题的消息会被条件反射式地删掉）之类的唠叨浪费机会。不要用你痛苦的深度来打动我们，相反，要在这点空间中使用超级简明扼要的问题描述。</p><p>使用主题的好惯例是“对象──偏差”（式的描述），许多技术支持组织就是这样做的。在“对象”部分指明是哪一个或哪一组东西有问题，在“偏差”部分则描述与期望的行为不一致的地方。</p><p>愚蠢： &gt;救命啊！我的笔记本视频工作不正常！</p><p>明智： &gt;X.org 6.8.1 扭曲鼠标光标，MV1005 型号的某显卡芯片组</p><p>更明智： &gt;使用 MV1005 型号的某显卡芯片组在 X.org 6.8.1 的鼠标光标被扭曲</p><p>编写 “对象──偏差”式描述的过程有助于你组织对问题的细致思考。是什么被影响了？仅仅是鼠标光标或者还有其它图形？只在 X.org 中出现？或只是在其 6.8.1 版中？是针对某显卡芯片组？或者只是其中的 MV1005 型号？一个黑客只需描一眼就能够立即明白什么是你遇到的问题，什么是你自己的问题。</p><p>更一般地，想象一下在一个只显示主题的文档索引中查找。让你的主题更好地反映问题，可以使下一个搜索类似问题的人能够在文档中直接就找到答案的线索，而不用再次发贴提问。</p><p>如果你想在回复中提问，确保改变主题以表明你是在问一个问题，一个主题象 <code>Re: 测试</code> 或者 <code>Re: 新Bug</code> 的消息不太可能引起足够的注意。同时，将回复中与新主题不甚相关的引用内容尽量删除。</p><p>对于列表消息，不要直接点击回复（按钮）来开始一个全新的线索，这将限制你的观众。有些邮件阅读程序，比如 mutt，允许用户按线索排序并通过折叠线索来隐藏消息，这样做的人永远看不到你发的消息。</p><p>仅仅改变主题还不够。mutt 和其它一些邮件阅读程序还要检查邮件头主题以外的其它信息，以便为其指定线索，所以宁可发一个全新的邮件。</p><p>在论坛，因为消息与特定的线索紧密结合，并且通常在线索之外不可见，好的提问方式略有不同，通过回复提问并不要紧。不是所有论坛都允许在回复中出现分离的主题，而且这样做了基本上没有人会去看。不过，通过回复提问本身就是令人怀疑的做法，因为它们只会被正在查看该线索的人读到。所以，除非你 只想 在该线索当前活跃的人群中提问，还是另起炉灶比较好。</p><h4 id="使问题容易回复">使问题容易回复</h4><p>以<code>请向……回复</code>来结束问题多半会使你得不到回答。如果你觉得花几秒钟在邮件客户端设置一下回复地址都麻烦，我们也觉得花几秒钟考虑你的问题更麻烦。如果你的邮件客户端程序不支持这样做，换个好点的；如果是操作系统不支持所有这种邮件客户端程序，也换个好点的。</p><p>在论坛，要求通过电子邮件回复是完全无礼的，除非你确信回复的信息也许是敏感的（而且有人会为了某些未知的原因，只让你而不是整个论坛知道答案）。如果你只是想在有人回复线索时得到电子邮件提醒，可以要求论坛发送。几乎所有论坛都支持诸如<code>留意本线索</code>、<code>有回复发送邮件</code>等功能。</p><h4 id="用清晰语法拼写正确的语句书写">用清晰、语法、拼写正确的语句书写</h4><p>经验告诉我们，粗心与草率的作者通常也粗心与草率地思考和编程（我敢打赌）。为这些粗心与草率的思考者回答问题没有什么好处，我们宁可将时间花在其它地方。</p><p>清楚、良好地表达你的问题非常重要。如果你觉得这样做麻烦，我们也觉得注意（你的问题）麻烦。花点额外的精力斟酌一下字句，用不着太僵硬与正式──事实上，黑客文化很看重能准确地使用非正式、俚语和幽默的语句。但它 必须 很准确，而且有迹象表明你是在思考和关注问题。</p><p>正确地拼写、使用标点和大小写，不要将 <code>its</code> 混淆为 <code>it's</code>，<code>loose</code> 搞成 <code>lose</code> 或者将 “discrete” 弄成 “discreet”。不要全部用大写，这会被视为无礼的大声嚷嚷 （全部小写也好不到哪去，因为不易阅读。Alan Cox [注：著名黑客，Linux 内核的重要参与者] 也许可以这样做，但你不行。）</p><p>一般而言，如果你写得象个半文盲似的傻子，多半得不到理睬。也不要使用即时通讯中的简写，如将 <code>you</code> 简化为 <code>u</code> 会使你看起来象一个为了节约二次击键的半文盲式的傻子。更糟的是，如果象个小孩似地鬼画桃符那绝对是在找死，可以肯定没人会理你（或者最多是给你一大堆指责与挖苦）。</p><p>如果在非母语论坛提问，你的拼写与语法错误会得到有限的宽容，但懒惰完全不会被容忍（是的，我们通常看得出其中的差别）。同时，除非你知道回复者使用的语言，请使用英语书写。繁忙的黑客一般会直接删除用他们看不懂语言写的消息。在互联网上英语是工作语言，用英语书写可以将你的问题不被阅读就被直接删除的可能性降到最低。</p><p>如果你用英语书写但它是你的第二语言，最好提醒潜在的回复者语言上可能的困难以便绕过这个问题，比如：</p><ul><li>英语不是我的母语，请谅解拼写错误。</li><li>如果您使用某某语言，请电邮/私聊我，也许我需要您的协助翻译我的问题。</li><li>对于这个技术术语本身我很熟悉，但对于它的一些俚语或习惯表达方式就不太明白了。</li><li>我已经同时用某某语及英语提问，如果您使用两者之一回复，我很乐意翻译。</li></ul><h4 id="使用易于读取且标准的文件格式发送问题">使用易于读取且标准的文件格式发送问题</h4><p>如果你人为地将问题搞得难以阅读，它多半会被忽略，人们更愿读易懂的问题，所以：</p><ul><li><p>使用纯文本而不是 HTML（超文本标注语言）（ 关闭HTML 并不难）</p></li><li><p>使用 MIME（多用途互联网邮件扩展）附件通常没有问题，前提是真正有内容（譬如附带的源文件或补丁），而不仅仅是邮件客户端程序生成的模板（譬如只是消息内容的拷贝）。</p></li><li><p>不要发送整段只是单行句子但多次折回的邮件（这使得回复部分内容非常困难）。设想你的读者是在80个字符宽的文本终端阅读邮件，设置你的行折回点小于 80 列。</p></li><li><p>但是，也 不要 用任何固定列折回数据（譬如日志文件拷贝或会话记录）。数据应该原样包含，使回复者确信他们看到的是与你看到的一样的东西。</p></li><li><p>在英语论坛中，不要使用'Quoted-Printable' MIME 编码发送消息。这种编码对于张贴非 ASCII 语言可能是必须的，但很多邮件程序并不支持。当它们分断时，那些文本中四处散布的 “=20”符号既难看也分散注意力，甚至有可能破坏内容的语意。</p></li><li><p>永远不要 指望黑客们阅读使用封闭的专用格式编写的文档，诸如微软公司的 Word 或 Excel 文件等。大多数黑客对此的反应就象有人将还在冒热气的猪粪倒在你门口时你的反应一样。即使他们能够处理，也很厌恶这么做。</p></li><li><p>如果你从使用视窗的电脑发送电子邮件，关闭问题颇多的微软“聪明引用”功能（在“工具” -&gt; “自动纠正选项”的“输入时自动格式化”下去掉聪明引用的选框），以免在你的邮件中到处散布垃圾字符。</p></li><li><p>在论坛，勿滥用“表情符号”和“HTML”功能(当它们提供时)。一两个表情符号通常没有问题，但花哨的彩色文本倾向于使人认为你是个无能之辈。过滥地使用表情符号、色彩和字体会使你看来象个傻笑的小姑娘。这通常不是个好主意，除非你只是对性而不是有用的回复更有兴趣。</p></li><li><p>如果你使用图形用户界面的邮件客户端程序(如网景公司的 Messenger、微软公司的 Outlook 或者其它类似的)，注意它们的缺省配置不一定满足这些要求。大多数这类程序有基于菜单的<code>查看源码</code>命令，用它来检查发送文件夹中的消息，以确保发送的是没有多余杂质的纯文本文件。</p></li></ul><h4 id="描述问题应准确且有内容">描述问题应准确且有内容</h4><ul><li>仔细、清楚地描述问题的症状</li><li>描述问题发生的环境(主机、操作系统、应用程序，任何相关的)，提供销售商的发行版和版本号（如：“Fedora Core 7”、“Slackware 9.1”等）</li><li>描述提问前做过的研究及其理解。</li><li>描述提问前为确定问题而采取的诊断步骤。</li><li>描述最近对计算机或软件配置的任何相关改变。</li><li>如果可能，提供在可控环境下重现问题的方法。</li><li>尽最大努力预测黑客会提到的问题，并提前备好答案。</li></ul><p>如果你认为是代码有问题，向黑客提供在可控环境下重现问题的方法尤其重要。当你这么做时，得到有用且及时回复的可能性将大大增加。</p><p><a href="http://www.chiark.greenend.org.uk/%7Esgtatham/">西蒙.泰瑟姆（Simon Tatham）</a>写过一篇《<a href="http://www.chiark.greenend.org.uk/%7Esgtatham/bugs-tw.html">如何有效报告Bug》</a>的文章，我强烈推荐各位阅读。</p><h4 id="量不在多精炼则灵">量不在多，精炼则灵</h4><p>你应该（写得）精炼且有内容，简单地将一大堆代码或数据罗列在求助消息中达不到目的。如果你有一个很大且复杂的测试样例让程序崩溃，尝试将其裁剪得越小越好。</p><p>至少有三个理由支持这点。第一，让别人看到你在努力简化问题使你更有可能得到回复。第二，简化问题使你更有可能得到 <code>有用的</code> 回复。第三，在提纯Bug报告的过程中，你可能自己就找到了解决办法或权宜之计。</p><h4 id="别急于宣称找到bug">别急于宣称找到Bug</h4><p>当你在一个软件中遇到问题，除非你 非常、非常 的有根据，不要动辄声称找到了Bug。提示：除非你能提供解决问题的源代码补丁，或者对前一版本的回归测试表现出不正确的行为，否则你都多半不够完全确信。对于网页和文档也如此，如果你（声称）发现了文档的“Bug”，你应该能提供相应位置的替代文本。</p><p>记住，还有许多其它用户并未经历你遇到的问题，否则你在阅读文档或搜索网页时就应该发现了（<a href="#你在报怨前已经做了这些，是吧%20？">你在报怨前已经做了这些，是吧 ？</a>）。这也意味着很有可能是你弄错了而不是软件本身有问题。</p><p>编写软件的人总是非常辛苦地使它尽可能完美。如果你声称找到了Bug，也就置疑了他们的能力，即使你是对的，也有可能会使其中的部分人感到不快。（此外，）在主题中嚷嚷“Bug”也是特别不老练的。</p><p>提问时，即使你私下非常确信已经发现一个真正的Bug，最好写得象是 你 做错了什么。如果真的有Bug，你会在回复中看到这点。这样做的话，如果真有虫子，维护者就会向你道歉，这总比你弄砸了然后欠别人一个道歉要强。</p><h4 id="低声下气代替不了做自己的家庭作业">低声下气代替不了做自己的家庭作业</h4><p>有些人明白他们不应该粗鲁或傲慢地行事并要求得到答复，但他们退到相反的低声下气的极端：“我知道我只是个可怜的新丁，一个失败者，但……”。这既使人困扰，也没有用，当伴随着对实际问题含糊的描述时还特别令人反感。</p><p>别用低级灵长类动物的办法浪费你我的时间，相反，尽可能清楚地描述背景情况和你的问题，这比低声下气更好地摆正了你的位置。</p><p>有时，论坛设有单独的初学者提问版面，如果你真的认为遇到了肤浅的问题，到那去就是了，但一样别低声下气。</p><h4 id="描述问题症状而不是猜测">描述问题症状而不是猜测</h4><p>告诉黑客是什么导致了问题是没用的（如果你的诊断理论是了不起的东西，你还会向别人咨询求助吗？）。所以，确保只是告诉他们问题的原始症状，而不是你的解释和理论，让他们来解释和诊断。如果你认为陈述自己的猜测很重要，应清楚地说明这只是你的猜测并描述为什么它们不起作用。</p><p>愚蠢： &gt;我在编译内核时接连遇到 SIG11 错误，怀疑主板上的某根电路丝断了，找到它们的最好办法是什么？</p><p>明智： &gt; 我组装的电脑（K6/233 CPU、FIC-PA2007 主板[威盛 Apollo VP2 芯片组]、Corsair PC133 SDRAM 256Mb 内存）最近在开机 20 分钟左右、做内核编译时频繁地报 SIG11 错，但在头 20 分钟内从不出问题。重启动不会复位时钟，但整夜关机会。更换所有内存未解决问题，相关的典型编译会话日志附后。</p><p>由于以上这点许多人似乎难以掌握，这里有句话可以提醒你：“所有的诊断专家都来自密苏里州”。美国国务院的官方座右铭则是“让我看看”（出自国会议员威勒德.D.范迪弗［Willard D. Vandiver］在1899年时的讲话：“我来自一个出产玉米、棉花、牛蒡和民主党人的国家，滔滔雄辩既不能说服我，也不会让我满意。我来自密苏里州，你必须让我看看。”）针对诊断者而言，这并不是怀疑，而只是一种真实而有用的需求，以便让他们看到与你看到的原始证据尽可能一致的东西，而不是你的猜测与总结。（所以，）让我们看看。</p><h4 id="按时间先后罗列问题症状">按时间先后罗列问题症状</h4><p>刚出问题之前发生的事情通常包含有解决问题最有效的线索。所以，记录中应准确地描述你、电脑和软件在崩溃前都做了什么。在命令行处理的情况下，有会话日志（如运行脚本工具生成的）并引用相关的若干（如20）行记录会非常有帮助。</p><p>如果崩溃的程序有诊断选项（如-v详述开关），试着选择这些能在记录中增加排错信息的选项。记住，“多”不等于“好”。试着选取适当的排错级别以便提供有用的信息而不是将阅读者淹没在垃圾中。</p><p>如果你的记录很长（如超过四段），在开头简述问题随后按时间先后罗列详细过程也许更有用。这样，黑客在读你的记录时就知道该注意哪些内容了。</p><h4 id="描述目标而不是过程">描述目标而不是过程</h4><p>如果你想弄清楚如何做某事（而不是报告一个Bug），在开头就描述你的目标，然后才陈述遇到问题的特定步骤。</p><p>经常出现这种情况，寻求技术帮助的人在脑袋里有个更高层次的目标，他们在自以为能达到目标的特定道路上被卡住了，然后跑来问该怎么走，但没有意识到这条路本身有问题，结果要费很大的劲才能通过。</p><p>愚蠢： &gt; 我怎样才能让某图形程序的颜色拾取器取得十六进制的 RGB 值？</p><p>明智： &gt; 我正试着用自己选定数值的颜色替换一幅图片的色表，我现在知道的唯一方法是编辑每个表槽，但却无法让某图形程序的颜色拾取器取得十六进制的 RGB 值。</p><p>第二种提法是明智的，它使得建议采用更合适的工具以完成任务的回复成为可能。</p><h4 id="别要求私下回复电邮">别要求私下回复电邮</h4><p>黑客们认为问题的解决过程应该公开、透明，此过程中如果更有才能的人注意到不完整或者不当之处，最初的回复才能够、也应该被纠正。同时，作为回复者也因为能力和学识被其它同行看到而得到某种回报。</p><p>当你要求私下回复时，此过程和回报都被中止。别这样做，让 回复者 来决定是否私下回答──如果他真这么做了，通常是因为他认为问题编写太差或者太肤浅，以至于对其它人毫无意义。</p><p>对这条规则存在一条有限的例外，如果你确信提问可能会引来大量雷同的回复时，那么“向我发电邮，我将为论坛归纳这些回复”将是神奇的句子。试着将邮件列表或新闻组从洪水般雷同的回复中解救出来是非常有礼貌的──但你必须信守诺言。</p><h4 id="提问应明确">提问应明确</h4><p>漫无边际的问题通常也被视为没有明确限制的时间无底洞。最有可能给你有用答案的人通常也是最忙的人（假如只是因为他们承担了太多工作的话），这些人对于没有止境的时间无底洞极其敏感，所以他们也倾向于讨厌那些漫无边际的问题。</p><p>如果你明确了想让回复者做的事（如指点方向、发送代码、检查补丁或其它），你更有可能得到有用的回复。（因为）这样可以让他们集中精力并间接地设定了他们为帮助你需要花费的时间和精力上限，这很好。</p><p>要想理解专家生活的世界，可以这样设想：那里有丰富的专长资源但稀缺的响应时间。你暗中要求他们奉献的时间越少，你越有可能从这些真正懂行也真正很忙的专家那里得到解答。</p><p>所以限定你的问题以使专家回答时需要付出的时间最少──这通常与简化问题还不太一样。举个例，“请问可否指点一下哪有好一点的 X 解释？”通常要比“请解释一下 X”明智。如果你的代码不运行了，通常请别人看看哪有问题比叫他们帮你改正更明智。</p><h4 id="关于代码的问题">关于代码的问题</h4><p>别要求他人给你出问题的代码排错而不提及应该从何入手。张贴几百行的代码，然后说一声“它不能运行”会让你得不到理睬。只贴几十行代码，然后说一句“在第七行以后，本应该显示<x>，但实际出现的是<y>”非常有可能让你得到回复。</p><p>最精确描述代码问题的方法是提供一个能展示问题的最小测试样例。什么是最小测试样例？它是对问题的展现，只需要刚好能够重现非预期行为的代码即可。如何生成一个最小测试样例？如果你知道哪一行或哪一段代码会产生问题，将其复制并提供刚好够用的外围支撑代码以构成一个完整的样例（够用是指源码刚好能被编译器、解释器或任何处理它的程序所接受）。如果你不能将问题缩小到特定的段落，复制源码并去除那些与问题无关的代码段。你能提供的最小测试样例越小越好（参见 量不在多，精炼则灵 ）。</p><p>生成一个非常小的最小测试样例并不总是可能，但尽力去做是很好的锻练，这有可能帮助你找到需要自己解决的问题。即使你找不到，黑客们喜欢看到你努力过，这将使他们更合作。</p><p>如果你只是想让别人帮忙审一下代码，在最开头就要说出来，并且一定要提到你认为哪一部分特别需要关注以及为什么。</p><h4 id="别张贴家庭作业式问题">别张贴家庭作业式问题</h4><p>黑客们善于发现“家庭作业”式的问题。我们中的大多数人已经做了自己的家庭作业，那是该 你 做的，以便从中学到东西。问一下提示没有关系，但不是要求完整的解决方案。</p><p>如果你怀疑自己碰到了一个家庭作业式的问题，但仍然无法解决，试试在用户组、论坛或（作为最后一招）在项目的“用户”邮件列表或论坛中提问。尽管黑客们 会 看出来，一些老用户也许仍会给你提示。</p><h4 id="删除无意义的要求">删除无意义的要求</h4><p>抵制这种诱惑，即在求助消息末尾加上诸如“有人能帮我吗？”或“有没有答案？”之类在语义上毫无意义的东西。第一，如果问题描述还不完整，这些附加的东西最多也只能是多余的。第二，因为它们是多余的，黑客们会认为这些东西烦人──就很有可能用逻辑上无误但打发人的回复，诸如“是的，你可以得到帮助”和“不，没有给你的帮助”。</p><p>一般来说，避免提“是或否”类型的问题，除非你想得到 “是或否”类型的回答。</p><h4 id="不要把问题标记为紧急即使对你而言的确如此">不要把问题标记为“紧急”，即使对你而言的确如此</h4><p>这是你的问题，不要我们的。宣称“紧急”极有可能事与愿违：大多数黑客会直接删除这种消息，他们认为这是无礼和自私地企图得到即时与特殊的关照。而且“紧急”或其它有类似含义的主题有可能触发垃圾过滤规则，潜在的回复者可能永远看不到你的问题！</p><p>有一点点局部的例外，如果你是在一些知名度很高、会使黑客们激动的地方使用程序，也许值得这样去做。在这种情况下，如果你有期限压力，也很有礼貌地提到这点，人们也许会有足够的兴趣快一点回答。</p><p>当然，这是非常冒险的，因为黑客们对什么是令人激动的标准多半与你的不同。譬如从国际空间站这样张贴没有问题，但代表感觉良好的慈善或政治原因这样做几乎肯定不行。事实上，张贴诸如“紧急：帮我救救这个毛绒绒的小海豹！”肯定会被黑客回避或光火，即使他们认为毛绒绒的小海豹很重要。</p><p>如果你觉得这不可思议，再把剩下的内容多读几遍，直到弄懂了再发贴也不迟。</p><h4 id="礼貌总是有益的">礼貌总是有益的</h4><p>礼貌一点，使用 <code>请</code> 和 <code>谢谢你的关注</code> 或者 <code>谢谢你的关照</code>，让别人明白你感谢他们无偿花时间帮助你。</p><p>坦率地讲，这一点没有语法正确、文字清晰、准确、有内容和避免使用专用格式重要（同时也不能替代它们）。黑客们一般宁可读有点唐突但技术鲜明的Bug报告，而不是那种有礼但含糊的报告。（如果这点让你不解，记住我们是按问题能教我们什么来评价它的）</p><p>然尔，如果你已经谈清楚了技术问题，客气一点肯定会增加你得到有用回复的机会。</p><p>（我们必须指出，本文唯一受到一些老黑客认真反对的地方是以前曾经推荐过的“提前谢了”，一些黑客认为这隐含着事后不用再感谢任何人的暗示。我们的建议是要么先说 <code>提前谢了</code>，事后 再 对回复者表示感谢，要么换种方式表达，譬如用 <code>谢谢你的关注</code> 或 <code>谢谢你的关照</code>）。</p><h4 id="问题解决后追加一条简要说明">问题解决后追加一条简要说明</h4><p>问题解决后向所有帮助过的人追加一条消息，让他们知道问题是如何解决的并再次感谢。如果问题在邮件列表或新闻组中受到广泛关注，在那里追加此消息比较恰当。</p><p>最理想的方式是向最初提问的线索回复此消息，并在主题中包含 <code>已解决</code>、<code>已搞定</code> 或其它同等含义的明显标记。在人来人往的邮件列表里，一个看见线索 <code>问题 X</code> 和 <code>问题 X-已解决</code> 的潜在回复者就明白不用再浪费时间了（除非他个人觉得“问题 X”有趣），因此可以利用此时间去解决其它问题。</p><p>追加的消息用不着太长或太复杂，一句简单的“你好──是网线坏了！谢谢大家──比尔”就比什么都没有要强。事实上，除非解决问题的技术真正高深，一条简短而亲切的总结比长篇大论要好。说明是什么行动解决了问题，用不着重演整个排错的故事。</p><p>对于有深度的问题，张贴排错历史的摘要是恰当的。描述问题的最终状态，说明是什么解决了问题，在此之后 才指明可以避免的弯路。应避免的弯路部分应放在正确的解决方案和其它总结材料之后，而不要将此消息搞成侦探推理小说。列出那些帮助过你的名字，那样你会交到朋友的。</p><p>除了有礼貌、有内容以外，这种类型的追帖将帮助其他人在邮件列表、新闻组或论坛文档中搜索到真正解决你问题的方案，从而也让他们受益。</p><p>最后，此类追帖还让每位参与协助的人因问题的解决而产生一种满足感。如果你自己不是技术专家或黑客，相信我们，这种感觉对于你寻求帮助的老手和专家是非常重要的。问题叙述到最后不知所终总是令人沮丧的，黑客们痒痒地渴望它们被解决。<code>挠痒痒</code> 为你挣到的信誉将对你下次再次张贴提问非常非常的有帮助。</p><p>考虑一下怎样才能避免他人将来也遇到类似的问题，问问自己编一份文档或 FAQ 补丁会不会有帮助，如果是的话就将补丁发给维护者。</p><p>在黑客中，这种良好的后继行动实际上比传统的礼貌更重要，也是你善待他人而赢得声誉的方式，这是非常有价值的财富。</p><h3 id="如何解读回答">如何解读回答</h3><h4 id="读读该死的手册rtfm和搜搜该死的网络stfw如何明白你已完全搞砸">“读读该死的手册”（RTFM）和“搜搜该死的网络”（STFW）：如何明白你已完全搞砸</h4><p>有一个古老而神圣的传统：如果你收到 <code>读读该死的手册</code>（RTFM） 的回复，发信人认为你应该去“读读该死的手册”。他或她多半是对的，去读一下吧。</p><p>“读读该死的手册”（RTFM）有个年轻一点的亲戚，如果你收到“搜搜该死的网络”（STFW）的回复，发信人认为你应该“搜搜该死的网络”。那人多半也是对的，去搜一下吧。(更温和一点的说法是“<a href="http://lmgtfy.com/">谷歌是你的朋友！</a>”)</p><p>在论坛，你也可能被要求去搜索论坛的文档。事实上，有人甚至可能热心地为你提供以前解决此问题的线索。但不要依赖这种关照，提问前应该先搜索一下文档。</p><p>通常，叫你搜索的人已经打开了能解决你问题的手册或网页，正在一边看一边敲键盘。这些回复意味着他认为：</p><ul><li>第一，你要的信息很容易找到。</li><li>第二，自已找要比别人喂到嘴里能学得更多。</li></ul><p>你不应该觉得这样就被冒犯了，按黑客的标准，回复者没有不理你就是在向你表示某种尊敬，你反而应该感谢他热切地想帮助你。</p><h4 id="如果还不明白">如果还不明白……</h4><p>如果你看不懂回答，不要马上回复一个要求说明的消息，先试试那些最初提问时用过的相同工具（如手册、FAQ、网页、懂行的朋友等）试着搞懂回答。如果还是需要说明，展现你已经明白的。</p><p>譬如，假如我告诉你：“看起来象是某输入项有问题，你需要清除它”，接着是个 不好 的回帖：“什么是某输入项？”。而这是一个 很好 的跟帖：“是的，我读了手册，某某输入项只在 -z 和 -p 开关中被提到，但都没有涉及到如何清除它们，你指的是哪一个还是我弄错了什么？”</p><h4 id="对待无礼">对待无礼</h4><p>很多黑客圈子中看似无礼的行为并不是存心冒犯。相反，它是直接了当、一针见血式的交流风格，这种风格对于更关注解决问题而不是使别人感觉舒服而混乱的人是很自然的。</p><p>如果你觉得被冒犯了，试着平静地反应。如果有人真的做了过格的事，邮件列表、新闻组或论坛中的前辈多半会招呼他。如果这 没有 发生而你却光火了，那么你发火对象的言语可能在黑客社区中看起来是正常的，而 你 将被视为有错的一方，这将伤害到你获取信息或帮助的机会。</p><p>另一方面，你会偶而真的碰到无礼和无聊的言行。与上述相反，对真正的冒犯者狠狠地打击、用犀利的语言将其驳得体无完肤都是可以接受的。然尔，在行事之前一定要非常非常的有根据。纠正无礼的言论与开始一场毫无意义的口水战仅一线之隔，黑客们自己莽撞地越线的情况并不鲜见。如果你是新手或外来者，避开这种莽撞的机会并不高。如果你想得到的是信息而不是消磨时光，这时最好不要把手放在键盘上以免冒险。</p><p>（有些人断言很多黑客都有轻度的自闭症或阿斯伯格综合症，缺少用于润滑人类社会“正常”交往所需的脑电路。这既可能是真也可能是假。如果你自己不是黑客，兴许你认为我们脑袋有问题还能帮助你应付我们的古怪行为。只管这么干好了，我们不在乎。我们 喜欢 现在这个样子，并且一般都对病号标记有站得住脚的怀疑。）</p><p>在下一节，我们会谈到另一个问题，当 你 行为不当时会受到的“冒犯”。</p><h3 id="别象失败者那样反应">别象失败者那样反应</h3><p>在黑客社区的论坛中有那么几次你可能会搞砸──以本文描述或类似的方式。你会被示众是如何搞砸的，也许言语中还会带点颜色。</p><p>这种事发生以后，你能做的最糟糕的事莫过于哀嚎你的遭遇、宣称被口头攻击、要求道歉、高声尖叫、憋闷气、威胁诉诸法律、向其雇主报怨、忘了关马桶盖等等。相反，你该这样去做：</p><p>熬过去，这很正常。事实上，它是有益健康与恰当的。</p><p>社区的标准不会自己维持，它们是通过参与者积极而 公开 地执行来维持的。不要哭嚎所有的批评都应该通过私下的邮件传送，这不是事情运作的方式。当有人评论你的一个说法有误或者提出不同看法时，坚持声称受到个人攻击也毫无益处，这些都是失败者的态度。</p><p>也有其它的黑客论坛，受过高礼节要求的误导，禁止参与者张贴任何对别人帖子挑毛病的消息，并声称“如果你不想帮助用户就闭嘴”。有思路的参与者纷纷离开的结果只会使它们变成了毫无意义的唠叨与无用的技术论坛。</p><p>是夸张的“友谊”（以上述方式）还是有用？挑一个。</p><p>记着：当黑客说你搞砸了，并且(无论多么刺耳地)告诉你别再这样做时，他正在为关心你和他的社区而行动。对他而言，不理你并将你从他的生活中滤除要容易得多。如果你无法做到感谢，至少要有点尊严，别大声哀嚎，也别因为自己是个有戏剧性超级敏感的灵魂和自以为有资格的新来者，就指望别人象对待脆弱的洋娃娃那样对你。</p><p>有时候，即使你没有搞砸（或者只是别人想象你搞砸了）， 有些人也会无缘无故地攻击你本人。在这种情况下，报怨倒是 真的 会把问题搞砸。</p><p>这些找茬者要么是毫无办法但自以为是专家的不中用家伙，要么就是测试你是否真会搞砸的心理专家。其它读者要么不理睬，要么用自己的方式对付他们。这些找茬者在给自己找麻烦，这点你不用操心。</p><p>也别让自己卷入口水战，大多数口水战最好不要理睬──当然，是在你核实它们只是口水战、没有指出你搞砸的地方，而且没有巧妙地将问题真正的答案藏于其中之后（这也是可能的）。</p><h3 id="提问禁忌">提问禁忌</h3><p>下面是些典型的愚蠢问题和黑客不回答它们时的想法。</p><p>问：我到哪可以找到某程序或 X 资源？</p><p>问：我怎样用 X 做 Y？</p><p>问：如何配置我的 shell 提示？</p><p>问：我可以用 Bass-o-matic 文件转换工具将 AcmeCorp 文档转为 TeX 格式吗？</p><p>问：我的{程序、配置、SQL 语句}不运行了</p><p>问：我的视窗电脑出问题了，你能帮忙吗？</p><p>问：我的程序不运行了，我认为系统工具X有问题</p><p>问：我安装 Linux 或 X 遇到困难，你能帮忙吗？</p><p>问：我如何才能破解超级用户口令/盗取通道操作员的特权/查看某人的电子邮件？</p><hr /><p>问：<br />&gt; 我到哪可以找到某程序或 X 资源？</p><p>答：<br />&gt; 在我找到它的同样地方，笨旦──在网页搜索引擎上。上帝啊，难道还有人不知道如何使用 谷歌 吗？</p><p>问：<br />&gt; 我怎样用 X 做 Y？</p><p>答：<br />&gt; 如果你想解决的是 Y，提问时别给出可能并不恰当的方法。这种问题说明提问者不但对 X 完全无知，也对要解决的 Y 问题糊涂，还被特定形势禁锢了思维。等他们把问题弄好再说。</p><p>问：<br />&gt; 如何配置我的 shell 提示？</p><p>答：<br />&gt; 如果你有足够的智慧提这个问题，你也该有足够的智慧去 “读读该死的手册”（RTFM），然后自己去找出来。</p><p>问：<br />&gt; 我可以用 Bass-o-matic 文件转换工具将 AcmeCorp 文档转为 TeX 格式吗？</p><p>答：<br />&gt; 试试就知道了。如果你试过，你既知道了答案，又不用浪费我的时间了。</p><p>问：<br />&gt; 我的{程序、配置、SQL 语句}不运行了</p><p>答：<br />&gt; 这不是一个问题，我也没有兴趣去猜你有什么问题──我有更要紧的事要做。看到这种东西，我的反应一般如下：</p><ul><li>你还有什么补充吗？</li><li>噢，太糟了，希望你能搞定。</li><li>这跟我究竟有什么关系？</li></ul><p>问：<br />&gt; 我的视窗电脑出问题了，你能帮忙吗？</p><p>答：<br />&gt; 是的，把视窗垃圾删了，装个象 Linux 或 BSD 的开源操作系统吧。</p><p>注意：如果程序有官方的视窗版或者与视窗有交互(如 Samba)，你 可以 问与视窗相关的问题，只是别对问题是由视窗操作系统而不是程序本身造成的回复感到惊讶，因为视窗一般来说太差，这种说法一般都成立。</p><p>问：<br />&gt; 我的程序不运行了，我认为系统工具 X 有问题</p><p>答：<br />&gt; 你完全有可能是第一个注意到被成千上万用户反复使用的系统调用与库文件有明显缺陷的人，更有可能的是你完全没有根据。不同凡响的说法需要不同凡响的证据，当你这样声称时，你必须有清楚而详尽的缺陷说明文档作后盾。</p><p>问：<br />&gt; 我安装 Linux 或 X 遇到困难，你能帮忙吗？</p><p>答：<br />&gt; 不行，我需要亲手操作你的电脑才能帮你排错，去向当地的 Linux 用户组寻求方便的帮助（你可以在 这里 找到用户组列表）</p><p>注意：如果安装问题与某 Linux 发行版有关，在针对 它 的邮件列表、论坛或本地用户组织中提问也许是恰当的。此时，应描述问题的准确细节。在此之前，先用 “linux”和 所有 被怀疑的硬件 [作关键词] 仔细搜索。</p><p>问：<br />&gt; 我如何才能破解超级用户口令/盗取通道操作员的特权/查看某人的电子邮件？</p><p>答：<br />&gt; 想做这种事情说明你是个卑劣的家伙，想让黑客教你做这种事情说明你是个白痴。</p><h4 id="好问题与坏问题">好问题与坏问题</h4><p>最后，我将通过举例来演示提问的智慧。同样的问题两种提法，一种愚蠢，另一种明智。</p><p>愚蠢：我在哪能找到关于 Foonly Flurbamatic 设备的东西？ &gt; 这个问题在乞求得到 “搜搜该死的网络”（STFW） 式的回复。</p><p>明智： 我用谷歌搜索过“Foonly Flurbamatic 2600”，但没有找到什么有用的，有谁知道在哪能找到这种设备的编程信息？ &gt; 这个人已经搜索过网络了，而且听起来他可能真的遇到了问题。</p><p>愚蠢： 我不能编译某项目的源代码，它为什么这么破？ &gt; 提问者假设是别人搞砸了，太自大了。</p><p>明智： 某项目的源代码不能在某 Linux 6.2 版下编译。我读了常见问题文档，但其中没有与某 Linux 相关的内容。这是编译时的记录，我做错了什么吗？ &gt; 提问者已经指明了运行环境，读了常见问题文档（FAQ），列出了错误，也没有假设问题是别人的过错，这家伙值得注意。</p><p>愚蠢： 我的主板有问题，谁能帮我？ &gt; 某黑客对此的反应可能是：“是的，还需要帮你拍背和换尿布吗？”，然后是敲下删除键。</p><p>明智： 我在 S2464 主板上试过 X、Y 和 Z，当它们都失败后，又试了 A、B 和 C。注意我试 C 时的奇怪症状，显然某某东西正在做某某事情，这不是期望的行为。通常在 Athlon MP 主板上导致某某事情的原因是什么？有谁知道我还能再试点什么以确定问题？ &gt; 相反地，这个人看来值得回答。他或她展现了解决问题的能力而不是坐等天上掉馅饼。</p><p>在最后那个问题中，注意“给我一个回答”与“请帮我看看我还能再做点什么测试以得到启发”之间细微但重要的差别。</p><p>事实上，最后那个问题基本上源于 2001 年 8 月 Linux 内核邮件列表（lkml）上的真实事件，是我（Eric）当时提了那个问题，我发现 Tyan S2462 主板有神秘的死机现象，邮件列表成员给我提供了解决此问题的关键信息。</p><p>通过这种提问方式，我给了别人可以咀嚼玩味的东西。我设法使之对参与者既轻松又有吸引力，也表明了对同行能力的尊敬并邀请他们与我一起协商。通过告诉他们我已经走过的弯路，我还表明了对他们宝贵时间的尊重。</p><p>事后，当我感谢大家并评论这次良好的经历时，一个 Linux 内核邮件列表的成员谈到，他认为我得到答案并不是因为我的名字挂在列表上，而只是因为我正确的提问方式。</p><p>黑客们在某种方面是非常不留情面的精英分子。我想在这事上他是对的，如果我 表现得 象个不劳而获的寄生虫，不管我是谁都会被忽略或斥责。他建议将整个事件作为对其它人提问的指导，这直接导致了本文的编写。</p><h3 id="如果得不到回答">如果得不到回答</h3><p>如果得不到回答，请不要认为我们不想帮你，有时只是因为被问到的小组成员的确不知道答案。没有回复不等于不被理睬，当然必须承认从外面很难看出两者的差别。</p><p>一般而言，直接将问题再张贴一次不好，这会被视为毫无意义的骚扰。耐心一点，知道你问题答案的人可能生活在不同的时区，有可能正在睡觉，也有可能你的问题一开始就没有组织好。</p><p>还有其它资源可以寻求帮助，通常是在一些面向新手的资源中。</p><p>有许多在线与本地的用户组织，虽然它们自己不编写任何软件，但是对软件很热心。这些用户组通常因互助和帮助新手而形成。</p><p>还有众多大小商业公司提供签约支持服务，别因为要付点钱才有支持就感到沮丧！毕竟，如果你车子的汽缸垫烧了，你多半还得花钱找个修理店把它弄好。即使软件没花你一分钱，你总不能指望服务支持都是免费的。</p><p>象 Linux 这样流行的软件，每个开发者至少有一万个以上的用户，一个人不可能应付这么多用户的服务要求。记住，即使你必须付费才能得到支持，也比你还得额外花钱买软件要少得多（而且对封闭源代码软件的服务支持与开源软件相比通常还要贵一点，也要差一点）。</p><h3 id="如何更好地回答">如何更好地回答</h3><p>态度和善一点。问题带来的压力常使人显得无礼或愚蠢，其实并不是这样。</p><p>对初犯者私下回复。 对那些坦诚犯错之人没有必要当众羞辱，一个真正的新手也许连怎么搜索或在哪找 FAQ 都不知道。</p><p>如果你不确定，一定要说出来！ 一个听起来权威的错误回复比没有还要糟，别因为听起来象个专家好玩就给别人乱指路。要谦虚和诚实，给提问者与同行都树个好榜样。</p><p>如果帮不了忙，别妨碍。 不要在具体步骤上开玩笑，那样也许会毁了用户的安装──有些可怜的呆瓜会把它当成真的指令。</p><p>探索性的反问以引出更多的细节。 如果你做得好，提问者可以学到点东西──你也可以。试试将很差的问题转变成好问题，别忘了我们都曾是新手。</p><p>尽管对那些懒虫报怨一声“读读该死的手册”（RTFM）是正当的，指出文档的位置（即使只是建议做个谷歌关键词搜索）会更好</p><p>如果你决意回答，给出好的答案。 当别人正在用错误的工具或方法时别建议笨拙的权宜之计，应推荐更好的工具，重新组织问题。</p><p>请回答真正的问题！如果提问者已经做了自己该做的研究，并且说明尝试过<code>X，Y，Z，A，B 与 C</code> 都没有得到想要的結果，那么回复 <code>试试 A 或 B</code> 或者给出一个内容为 <code>试一下 X，Y，Z，A，B 或 C</code> 的链接将极其无益！</p><p>帮助你的社区从中学习。当回复一个好问题时，问问自己 <code>如何修改相关文件或 FAQ 文档以免再次解答同样的问题？</code>，接着再向文档维护者发一份补丁。</p><p>如果你是在研究一番后才做出的回答，展现你的技巧而不是直接端出结果。毕竟“授人以鱼，不如授人以渔”。</p><h3 id="相关资源">相关资源</h3><p>如果需要个人电脑、Unix 和互联网如何工作的基础知识，参阅 <a href="http://en.tldp.org/HOWTO/Unix-and-Internet-Fundamentals-HOWTO/">Unix 和互联网工作的基本原理</a>。</p><p>当你发布软件或补丁时，试着按 <a href="http://en.tldp.org/HOWTO/Software-Release-Practice-HOWTO/index.html">软件发布实践</a> 操作。</p><h3 id="鸣谢">鸣谢</h3><p>伊夫林.米切尔（Evelyn Mitchell）贡献了一些愚蠢问题例子并启发了编写<code>如何更好地回答问题</code>这一节，米哈伊尔.罗门迪克（Mikhail Ramendik）贡献了一些特别有价值的建议和改进。</p>]]></content>
    
    
    <categories>
      
      <category>methodology</category>
      
    </categories>
    
    
  </entry>
  
  
  
  <entry>
    <title>Java Web学习</title>
    <link href="/2022/05/06/Java%20Web%E5%AD%A6%E4%B9%A0/"/>
    <url>/2022/05/06/Java%20Web%E5%AD%A6%E4%B9%A0/</url>
    
    <content type="html"><![CDATA[<h2 id="mysql">MySQL</h2><blockquote><p>关系型数据库管理系统</p></blockquote><h3 id="常用命令">常用命令</h3><h4 id="数据库管理命令">数据库管理命令</h4><figure class="highlight plaintext"><table><tr><td class="gutter"><div class="code-wrapper"><pre><span class="line">1</span><br></pre></div></td><td class="code"><pre><code class="hljs mysql">mysql -u&lt;use-name&gt; -p&lt;password&gt;#登陆数据库管理系统<br></code></pre></td></tr></table></figure><h4 id="ddl">DDL</h4><blockquote><p>(Data Definition Language)对数据集合（数据库，表）整体进行操作</p></blockquote><ul><li>对数据库操作</li></ul><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><code class="hljs mysql">#显示数据库<br>show databases<br><br>#创建数据库<br>CREATE DATABASE 数据库名称;<br>CREATE DATABASE db1;<br>CREATE DATABASE IF NOT EXISTS 数据库名称;<br>CREATE DATABASE IF NOT EXISTS db1;<br><br>#删除数据库<br>DROP DATABASE 数据库名称;<br>DROP DATABASE db1;<br>DROP DATABASE IF EXISTS 数据库名称;<br>DROP DATABASE IF EXISTS db1;<br><br>#选择数据库<br>USE 数据库名称;<br>USE db1;<br><br>#查看当前数据库<br>SELECT DATABASE();<br></code></pre></td></tr></table></figure><ul><li>对表操作</li></ul><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br></pre></td><td class="code"><pre><code class="hljs mysql">#显示表<br>SHOW TABLES;<br><br>#查询表结构<br>DESC 表名称;<br><br>#创建表<br>CREATE TABLE 表名 (<br>    字段名1  数据类型1,<br>    字段名2  数据类型2,<br>    …<br>    字段名n  数据类型n<br>);<br><br>#删除表<br>DROP TABLE 表名;<br>DROP TABLE IF EXISTS 表名;<br><br>#修改表名<br>ALTER TABLE 表名 RENAME TO 新的表名;<br><br>#添加列<br>ALTER TABLE 表名 ADD 列名 数据类型;<br><br>#修改数据类型<br>ALTER TABLE 表名 MODIFY 列名 新数据类型;<br><br>#修改列名和数据类型<br>ALTER TABLE 表名 CHANGE 列名 新列名 新数据类型;<br><br>#删除列<br>ALTER TABLE 表名 DROP 列名;<br></code></pre></td></tr></table></figure><h4 id="dml">DML</h4><blockquote><p>(Data Manipulation Language)对数据（表中数据）进行增删</p></blockquote><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br></pre></td><td class="code"><pre><code class="hljs mysql">#所有列添加数据<br>INSERT INTO 表名(列名1,列名2,…) VALUES(值1,值2,…);<br><br>#制定列添加数据<br>INSERT INTO 表名 VALUES(值1,值2,…);<br><br>#批量添加数据<br>INSERT INTO 表名(列名1,列名2,…) VALUES(值1,值2,…),(值1,值2,…),(值1,值2,…)…;<br>INSERT INTO 表名 VALUES(值1,值2,…),(值1,值2,…),(值1,值2,…)…;<br><br>e.g.<br>use db1;<br>select * from students;<br>INSERT INTO students VALUES <br>    (2,&#x27;李四&#x27;,&#x27;男&#x27;,&#x27;1999-11-11&#x27;,88.88,&#x27;lisi@itcast.cn&#x27;,&#x27;13888888888&#x27;,1);<br>    <br>#修改数据(不添加where筛选数据则修改所有数据对应属性)<br>UPDATE 表名 SET 列名1=值1,列名2=值2,… [WHERE 条件] ;<br><br>e.g. <br>UPDATE students SET 姓名=&#x27;张三&#x27; where 生日=&#x27;1999-11-11&#x27;;<br><br>#删除数据<br>DELETE FROM 表名 [WHERE 条件] ;<br></code></pre></td></tr></table></figure><h4 id="dql">DQL</h4><blockquote><p>(Data Query Language) 对数据（表中数据）进行查询</p></blockquote><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br></pre></td><td class="code"><pre><code class="hljs mysql">SELECT <br>    字段列表<br>FROM <br>    表名列表 <br>WHERE <br>    条件列表<br>GROUP BY<br>    分组字段<br>HAVING<br>    分组后条件<br>ORDER BY<br>    排序字段<br>LIMIT<br>    分页限定<br>    <br>#查询字段([去重复])<br>SELECT [DISTINCT] 字段列表（*） FROM 表名;<br><br>#条件查询<br>SELECT 字段列表 FROM 表名 WHERE 条件列表;<br><br>#排序查询<br>SELECT 字段列表 FROM 表名 WHERE 条件列表 [order by &lt;字段&gt; &lt;desc/asc&gt; , <br>                                &lt;字段&gt; &lt;desc/asc&gt;--第二字段<br>                               ];<br>                               <br>#聚合函数<br>count, max, min, sum, avg<br>SELECT 聚合函数名(列名) FROM 表;--为null时conut不统计，count(*)强制统计所有数据<br><br>#分组查询<br>select sex, avg(math),count(*) from stu where math &gt; 70 group by sex having count(*)  &gt; 2;<br><br>#分页查询<br>SELECT 字段列表 FROM 表名 LIMIT  起始索引 , 查询条目数;<br></code></pre></td></tr></table></figure><img src="/2022/05/06/Java%20Web%E5%AD%A6%E4%B9%A0/img.png" class=""><h4 id="dcl">DCL</h4><blockquote><p>(Data Control Language) 数据库管理系统权限控制</p></blockquote><h3 id="数据类型">数据类型</h3><table><colgroup><col style="width: 40%" /><col style="width: 30%" /><col style="width: 28%" /></colgroup><thead><tr class="header"><th style="text-align: center;">数值</th><th style="text-align: center;">日期</th><th style="text-align: center;">字符串</th></tr></thead><tbody><tr class="odd"><td style="text-align: center;">tinyint : 小整数型，占一个字节</td><td style="text-align: center;">date ： 日期值。只包含年月日</td><td style="text-align: center;">char ： 定长字符串，e.g. name char(10)</td></tr><tr class="even"><td style="text-align: center;">int ： 大整数类型，占四个字节</td><td style="text-align: center;">datetime ： 混合日期和时间值。包含年月日时分秒</td><td style="text-align: center;">varchar ： 变长字符串，e.g. name archer(10)</td></tr><tr class="odd"><td style="text-align: center;">double ： 浮点类型，使用格式： 字段名 double(总长度,小数点后保留的位数)</td><td style="text-align: center;"></td><td style="text-align: center;"></td></tr></tbody></table><h3 id="数据约束">数据约束</h3><blockquote><p>对数据字段值进行限制</p></blockquote><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><code class="hljs mysql">#约束关键字<br>NOT NULL<br>UNIQUE [AUTO_INCREMENT]<br>PRIMARY KEY<br>CHECK <br>DEFAULT<br>FOREIGN KEY<br><br>#添加约束<br>-- 创建表时添加非空约束<br>CREATE TABLE 表名(<br>   列名 数据类型 NOT NULL,<br>   …<br>); <br>-- 建完表后添加非空约束<br>ALTER TABLE 表名 MODIFY 字段名 数据类型 NOT NULL;<br><br>#删除约束<br>ALTER TABLE 表名 MODIFY 字段名 数据类型;<br></code></pre></td></tr></table></figure><h3 id="数据库设计">数据库设计</h3><h4 id="外键">外键</h4><blockquote><p>A表数据中某一字段值和B表中的某个数据的对应关系</p></blockquote><h4 id="表关系">表关系</h4><ul><li>一对一</li><li>一对多</li><li>多对多</li></ul><h4 id="多表查询">多表查询</h4><blockquote><p>对两表数据集合直积产生的数据集合进行筛选查询</p></blockquote><h5 id="连接查询">连接查询</h5><ul><li>内连接查询</li></ul><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs mysql">select * from &lt;t1&gt;, &lt;t2&gt; where &lt;t1&gt;.&lt;att&gt; = &lt;t2&gt;.&lt;att&gt;<br></code></pre></td></tr></table></figure><ul><li>外连接查询</li></ul><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><code class="hljs mysql">-- 左外连接<br>SELECT 字段列表 FROM 表1 LEFT [OUTER] JOIN 表2 ON 条件;<br><br>-- 右外连接<br>SELECT 字段列表 FROM 表1 RIGHT [OUTER] JOIN 表2 ON 条件;<br></code></pre></td></tr></table></figure><h5 id="子查询">子查询</h5><blockquote><p>嵌套查询</p></blockquote><h4 id="事务">事务</h4><blockquote><p>Transaction，数据库命令脚本，同时类似于原子操作，各个命令整体执行</p></blockquote><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><code class="hljs mysql">#start开始，commit或rollback结束<br>START TRANSACTION; BEGIN;<br><br>commit; rollback;<br></code></pre></td></tr></table></figure><h2 id="jdbc">JDBC</h2><blockquote><p>Java DataBase Connectivity，Java调用DBMS的API</p><p>Java定义接口，各DBMS对接口进行实现给出实现类</p></blockquote><h2 id="driud">Driud</h2><blockquote><p>数据库连接池，对connection进行复用提升数据库操作效率</p></blockquote><h2 id="maven">Maven</h2><blockquote><p>用于管理和构建Java项目的工具</p></blockquote><h2 id="mybatis">MyBatis</h2><blockquote><p>持久层框架，简化JDBC开发</p><p>对JDBC代码进行封装，实现配置与代码分离</p></blockquote><h2 id="html">HTML</h2><blockquote><p>超文本标记语言</p><p>定义网页内容</p></blockquote><h2 id="css">CSS</h2><blockquote><p>层叠样式表</p><p>定义网页形式</p></blockquote><h2 id="javascript">JavaScript</h2><blockquote><p>浏览器内核执行的脚本语言</p><p>动态生成网页内容，并可实现简单的表单功能</p></blockquote><h2 id="http">Http</h2><h2 id="fq">F&amp;Q</h2><ul><li>如何查看MySQL运行端口号</li></ul><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs mysql">mysql&gt; show global variables like &#x27;port&#x27;<br></code></pre></td></tr></table></figure><ul><li>如何查看MySQL配置文件路径</li></ul><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">mysql --<span class="hljs-built_in">help</span> | grep my.cnf<br></code></pre></td></tr></table></figure><ul><li>使用Maven报错<code>**Error : java 不支持发行版本5**</code></li></ul><p><a href="https://blog.csdn.net/qq_51263533/article/details/120209830">参考链接</a></p>]]></content>
    
    
    <categories>
      
      <category>foundation of computer science</category>
      
      <category>programming</category>
      
      <category>Java</category>
      
    </categories>
    
    
    <tags>
      
      <tag>learning</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>CSAPP笔记</title>
    <link href="/2022/05/05/CSAPP%E7%AC%94%E8%AE%B0/"/>
    <url>/2022/05/05/CSAPP%E7%AC%94%E8%AE%B0/</url>
    
    <content type="html"><![CDATA[<h2 id="exceptional-control-flow">Exceptional Control Flow</h2><blockquote><p>Control Flow是即将执行的指令串</p><p>Exceptional Control Flow是顺序被打乱的指令串</p></blockquote><h3 id="exceptions">Exceptions</h3><blockquote><p>Exceptions有四种类型，分别对应不同打乱指令串的方式</p></blockquote><ul><li>Interuption</li></ul><p>异步，即发生与否与正在执行的指令无关</p><ul><li>Trap</li></ul><p>同步。指令主动调用，通常用于系统调用</p><ul><li>Fault</li></ul><p>同步，跳转至处理程序，可能返回原指令串下一条指令或中断程序</p><ul><li>Aborts</li></ul><p>中断程序</p><h3 id="processes">Processes</h3>]]></content>
    
    
    <categories>
      
      <category>foundation of computer science</category>
      
    </categories>
    
    
    <tags>
      
      <tag>learning</tag>
      
      <tag>literature</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>Github学习</title>
    <link href="/2022/05/05/Github%E5%AD%A6%E4%B9%A0/"/>
    <url>/2022/05/05/Github%E5%AD%A6%E4%B9%A0/</url>
    
    <content type="html"><![CDATA[<h1 id="github">Github</h1><blockquote><p>参考链接：<a href="https://www.bilibili.com/video/BV1q54y1f7h6?spm_id_from=333.337.search-card.all.click">B站</a>，<a href="https://github.com/youhuangla/Note/tree/main/web">Gihub笔记</a></p></blockquote><h2 id="高级搜索">高级搜索</h2><p><a href="https://docs.github.com/cn/search-github/getting-started-with-searching-on-github/about-searching-on-github">About searching on GitHub - GitHub Docs</a></p><p><a href="https://docs.github.com/cn/search-github/searching-on-github/searching-code">搜索代码 - GitHub Docs</a></p><h2 id="查找文件">查找文件</h2><ul><li><p><code>t</code>查找文件</p></li><li><p><code>l</code>查找行</p><ul><li>点击行号可复制</li><li><code>b</code>查改更改记录</li></ul></li></ul><h3 id="快捷键">快捷键</h3><blockquote><p><a href="https://docs.github.com/cn/get-started/using-github/keyboard-shortcuts">键盘快捷键 - GitHub Docs</a></p></blockquote><img src="/2022/05/05/Github%E5%AD%A6%E4%B9%A0/gs-1710410.png" class=""><h2 id="在线代码编辑">在线代码编辑</h2><ul><li><code>.</code>在线运行VSCode</li><li>在项目地址前加上<code>gitpod.io/#/</code>前缀，可在线执行代码</li></ul><h2 id="项目推送">项目推送</h2>]]></content>
    
    
    <categories>
      
      <category>software</category>
      
    </categories>
    
    
    <tags>
      
      <tag>learning</tag>
      
      <tag>tools</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>算法学习</title>
    <link href="/2022/05/04/%E7%AE%97%E6%B3%95%E5%AD%A6%E4%B9%A0/"/>
    <url>/2022/05/04/%E7%AE%97%E6%B3%95%E5%AD%A6%E4%B9%A0/</url>
    
    <content type="html"><![CDATA[<h2 id="排序算法">排序算法</h2><h3 id="冒泡排序">冒泡排序</h3><img src="/2022/05/04/%E7%AE%97%E6%B3%95%E5%AD%A6%E4%B9%A0/image-29.png" class=""><h3 id="选择排序">选择排序</h3><img src="/2022/05/04/%E7%AE%97%E6%B3%95%E5%AD%A6%E4%B9%A0/image-30.png" class=""><h2 id="查找算法">查找算法</h2><h3 id="二分查找">二分查找</h3><img src="/2022/05/04/%E7%AE%97%E6%B3%95%E5%AD%A6%E4%B9%A0/image-31.png" class=""><img src="/2022/05/04/%E7%AE%97%E6%B3%95%E5%AD%A6%E4%B9%A0/image-32.png" class="">]]></content>
    
    
    <categories>
      
      <category>foundation of computer science</category>
      
      <category>algorithm</category>
      
    </categories>
    
    
    <tags>
      
      <tag>learning</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>IDEA学习</title>
    <link href="/2022/05/03/IDEA%E5%AD%A6%E4%B9%A0/"/>
    <url>/2022/05/03/IDEA%E5%AD%A6%E4%B9%A0/</url>
    
    <content type="html"><![CDATA[<h2 id="idea项目结构">IDEA项目结构</h2><img src="/2022/05/03/IDEA%E5%AD%A6%E4%B9%A0/image-3.png" class=""><h2 id="快捷键">快捷键</h2><img src="/2022/05/03/IDEA%E5%AD%A6%E4%B9%A0/image-7.png" class=""><h2 id="debug">Debug</h2><p><a href="https://www.bilibili.com/video/BV1xa411Y72S?spm_id_from=333.851.b_7265636f6d6d656e64.1">Debug技巧</a></p>]]></content>
    
    
    <categories>
      
      <category>software</category>
      
    </categories>
    
    
    <tags>
      
      <tag>learning</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>Java SE学习</title>
    <link href="/2022/05/03/Java%20SE%E5%AD%A6%E4%B9%A0/"/>
    <url>/2022/05/03/Java%20SE%E5%AD%A6%E4%B9%A0/</url>
    
    <content type="html"><![CDATA[<h1 id="java-se学习">Java SE学习</h1><blockquote><p>Java SE中的SE为Standard Edition的首字母缩写</p><p>参考资料：<a href="https://nxgdfhczg0.feishu.cn/drive/folder/fldcnhbDPwIhTzzB6R6tT6PfLvb">志哥的笔记</a>， <a href="https://www.geeksforgeeks.org/java/?ref=shm">GeeksforGeeks</a></p></blockquote><h2 id="数据类型">数据类型</h2><blockquote><p>Java是一种静态语言，即所有变量和表达式类型均在编译时可知的一门编程语言</p></blockquote><img src="/2022/05/03/Java%20SE%E5%AD%A6%E4%B9%A0/Data-types-in-Java-1552872.jpg" class=""><h3 id="基础数据类型">基础数据类型</h3><blockquote><p>值得注意的是，char类型统一使用unicode编码，并占用两字节内存</p></blockquote><img src="/2022/05/03/Java%20SE%E5%AD%A6%E4%B9%A0/Primitive-Data-Types-in-Java-4.jpg" class=""><h3 id="对象数据类型">对象数据类型</h3><blockquote><p>又称为Non-primative Data Type或Reference Data Type或Object Data type</p><p>Java中没有指针概念，所有动态生成对象使用的堆空间，均通过Java垃圾回收机制回收</p><p>在我理解看来，所谓对象数据类型，即为赋值操作时（包括函数传参）不会对数据类型代表的原始数据进行拷贝操作的数据类型</p></blockquote><h4 id="string">String</h4><img src="/2022/05/03/Java%20SE%E5%AD%A6%E4%B9%A0/image.png" class=""><h4 id="enum">enum</h4><img src="/2022/05/03/Java%20SE%E5%AD%A6%E4%B9%A0/image-4.png" class=""><h4 id="arraylist">ArrayList</h4><figure class="highlight java"><table><tr><td class="gutter"><div class="code-wrapper"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></div></td><td class="code"><pre><code class="hljs java"><span class="hljs-type">ArrayList</span> <span class="hljs-variable">list</span> <span class="hljs-operator">=</span> <span class="hljs-keyword">new</span> <span class="hljs-title class_">ArrayList</span>();<br><span class="hljs-keyword">public</span> <span class="hljs-type">boolean</span> <span class="hljs-title function_">add</span><span class="hljs-params">(E e)</span>;<br><span class="hljs-keyword">public</span> <span class="hljs-keyword">void</span> <span class="hljs-title function_">add</span><span class="hljs-params">(<span class="hljs-type">int</span> index,E element)</span>;<br></code></pre></td></tr></table></figure><img src="/2022/05/03/Java%20SE%E5%AD%A6%E4%B9%A0/image-2.png" class=""><h4 id="array">Array</h4><ul><li>Java中所有数组都是动态生成的（和C++不同）</li><li>可通过length属性获取数组长度</li><li>可嵌套使用</li></ul><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs Java"><span class="hljs-type">int</span>[] a = &#123;<span class="hljs-number">1</span>,<span class="hljs-number">2</span>,<span class="hljs-number">3</span>&#125;;<br><span class="hljs-type">int</span>[][] b = &#123;a, a, a, a&#125;;<br></code></pre></td></tr></table></figure><ul><li>数组下标从0开始</li><li>可用于static field, local variable, method parameter</li><li>superclass是Object</li><li>实现了接口<code>Cloneable</code>和<code>Java.io.Serializable</code></li></ul><h4 id="object">Object</h4><ul><li>Class</li></ul><blockquote><p>Object数据类型需要依照原型来创建，Class正是Object创建时参考的原型</p></blockquote><ul><li>Behavior</li></ul><blockquote><p>程序的任务之一便是对数据的处理，因此自定义的数据类型同样需要定义可以对该数据类型进行的操作</p></blockquote><ul><li>State</li></ul><blockquote><p>每一个数据类型都有代表其数据类型的属性，这些属性的数值可以表征一个实例的状态</p></blockquote><h2 id="面向对象编程技术">面向对象编程技术</h2><h3 id="关键字">关键字</h3><h4 id="public">public</h4><blockquote><p>修饰方法</p></blockquote><img src="/2022/05/03/Java%20SE%E5%AD%A6%E4%B9%A0/image-3.png" class=""><h4 id="final">final</h4><ul><li>对类：禁止继承</li><li>对方法：禁止重写</li><li>对变量：禁止二次赋值</li></ul><h4 id="abstract">abstract</h4><blockquote><p>被abstract修饰的类称为抽象类，无法实例化。</p></blockquote><h4 id="interface">interface</h4><blockquote><p>接口，相较于abstract更为抽象</p></blockquote><ul><li>对方法的修饰符<ul><li>public（缺省）：必须实现</li><li>default：</li><li>static：必须用借口名调用</li><li>private：只能被本类中其他方法调用</li></ul></li></ul><h4 id="static">static</h4><ul><li>修饰属性与方法</li></ul><blockquote><p>所有实例共用，建议通过类名调用</p></blockquote><ul><li>修饰代码块</li></ul><blockquote><p>称为静态代码段，类加载时执行，初始化类属性</p></blockquote><ul><li>应用实例</li></ul><blockquote><p>单例模式</p></blockquote><img src="/2022/05/03/Java%20SE%E5%AD%A6%E4%B9%A0/image-5.png" class=""><h4 id="常量">常量</h4><img src="/2022/05/03/Java%20SE%E5%AD%A6%E4%B9%A0/image-6.png" class=""><h3 id="继承">继承</h3><blockquote><p>一种代码复用技巧</p></blockquote><ul><li>使用<code>@Override</code>检测重载是否正确</li><li>方法和属性的调用均采用就近查找</li><li>不支持多重继承</li></ul><h3 id="多态">多态</h3><blockquote><p>动态分配实例调用方法时所指代码段</p></blockquote><ul><li>判断实例类型</li></ul><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs Java">&lt;variable-name&gt; instance of &lt;class-name&gt;<br></code></pre></td></tr></table></figure><h3 id="匿名类">匿名类</h3><blockquote><p>不需要使用类名即可直接实例化，通常继承抽象类或者接口</p><p>可用于函数参数中</p></blockquote><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><code class="hljs Java"><span class="hljs-keyword">class</span> <span class="hljs-title class_">Polygon</span> &#123;<br>   <span class="hljs-keyword">public</span> <span class="hljs-keyword">void</span> <span class="hljs-title function_">display</span><span class="hljs-params">()</span> &#123;<br>      System.out.println(<span class="hljs-string">&quot;在 Polygon 类内部&quot;</span>);<br>   &#125;<br>&#125;<br><br><span class="hljs-keyword">class</span> <span class="hljs-title class_">AnonymousDemo</span> &#123;<br>   <span class="hljs-keyword">public</span> <span class="hljs-keyword">void</span> <span class="hljs-title function_">createClass</span><span class="hljs-params">()</span> &#123;<br><br>      <span class="hljs-comment">// 创建的匿名类继承了 Polygon 类</span><br>      <span class="hljs-type">Polygon</span> <span class="hljs-variable">p1</span> <span class="hljs-operator">=</span> <span class="hljs-keyword">new</span> <span class="hljs-title class_">Polygon</span>() &#123;<br>         <span class="hljs-keyword">public</span> <span class="hljs-keyword">void</span> <span class="hljs-title function_">display</span><span class="hljs-params">()</span> &#123;<br>            System.out.println(<span class="hljs-string">&quot;在匿名类内部。&quot;</span>);<br>         &#125;<br>      &#125;;<br>      p1.display();<br>   &#125;<br>&#125;<br></code></pre></td></tr></table></figure><h2 id="常用类">常用类</h2><h3 id="io相关类">IO相关类</h3><img src="/2022/05/03/Java%20SE%E5%AD%A6%E4%B9%A0/image-2-1817433.png" class=""><h3 id="系统相关类">系统相关类</h3><h4 id="scanner">Scanner</h4><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><code class="hljs Java"><span class="hljs-keyword">import</span> java.util.Scanner;<br><span class="hljs-type">Scanner</span> <span class="hljs-variable">sc</span> <span class="hljs-operator">=</span> <span class="hljs-keyword">new</span> <span class="hljs-title class_">Scanner</span>(System.in);<br><span class="hljs-type">int</span> <span class="hljs-variable">age</span> <span class="hljs-operator">=</span> sc.nextInt();<br><span class="hljs-type">String</span> <span class="hljs-variable">name</span> <span class="hljs-operator">=</span> sc.next();<br></code></pre></td></tr></table></figure><h4 id="system">System</h4><blockquote><p>系统相关的工具类</p></blockquote><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs Java"><span class="hljs-keyword">public</span> <span class="hljs-keyword">static</span> <span class="hljs-keyword">void</span> <span class="hljs-title function_">exit</span><span class="hljs-params">(<span class="hljs-type">int</span> status)</span>;<br><span class="hljs-keyword">public</span> <span class="hljs-keyword">static</span> <span class="hljs-type">long</span> <span class="hljs-title function_">currentTimeMillis</span><span class="hljs-params">()</span>;<br><span class="hljs-keyword">public</span> <span class="hljs-keyword">static</span> <span class="hljs-keyword">void</span> <span class="hljs-title function_">arraycopy</span><span class="hljs-params">(数据源数组, 起始索引, 目的地数组, 起始索引, 拷贝个数)</span>;<br></code></pre></td></tr></table></figure><h3 id="数学相关类">数学相关类</h3><h4 id="random">Random</h4><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><code class="hljs Java"><span class="hljs-keyword">import</span> java.util.Random;<br><span class="hljs-type">Random</span> <span class="hljs-variable">r</span> <span class="hljs-operator">=</span> <span class="hljs-keyword">new</span> <span class="hljs-title class_">Random</span>();<br><span class="hljs-type">int</span> <span class="hljs-variable">data</span> <span class="hljs-operator">=</span> r.nextInt(<span class="hljs-number">100</span>);<span class="hljs-comment">//左闭右开</span><br><br></code></pre></td></tr></table></figure><h4 id="math">Math</h4><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><code class="hljs Java"><span class="hljs-keyword">public</span> <span class="hljs-keyword">static</span> <span class="hljs-type">int</span> <span class="hljs-title function_">abs</span><span class="hljs-params">(<span class="hljs-type">int</span> a)</span>;<br><span class="hljs-keyword">public</span> <span class="hljs-keyword">static</span> <span class="hljs-type">double</span> <span class="hljs-title function_">ceil</span><span class="hljs-params">(<span class="hljs-type">double</span> a)</span>;<br><span class="hljs-keyword">public</span> <span class="hljs-keyword">static</span> <span class="hljs-type">double</span> <span class="hljs-title function_">floor</span><span class="hljs-params">(<span class="hljs-type">double</span> a)</span>;<br><span class="hljs-keyword">public</span> <span class="hljs-keyword">static</span> <span class="hljs-type">int</span> <span class="hljs-title function_">round</span><span class="hljs-params">(<span class="hljs-type">float</span> a)</span>;<br><span class="hljs-keyword">public</span> <span class="hljs-keyword">static</span> <span class="hljs-type">int</span> <span class="hljs-title function_">max</span><span class="hljs-params">(<span class="hljs-type">int</span> a,<span class="hljs-type">int</span> b)</span>;<br><span class="hljs-keyword">public</span> <span class="hljs-keyword">static</span> <span class="hljs-type">double</span> <span class="hljs-title function_">pow</span><span class="hljs-params">(<span class="hljs-type">double</span> a,<span class="hljs-type">double</span> b)</span>;<br><span class="hljs-keyword">public</span> <span class="hljs-keyword">static</span> <span class="hljs-type">double</span> <span class="hljs-title function_">random</span><span class="hljs-params">()</span>;<br></code></pre></td></tr></table></figure><h4 id="bigdecimal">BigDecimal</h4><blockquote><p>科学计算</p></blockquote><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><code class="hljs Java"><span class="hljs-keyword">public</span> <span class="hljs-keyword">static</span> BigDecimal <span class="hljs-title function_">valueOf</span><span class="hljs-params">(<span class="hljs-type">double</span> val)</span>;<br><span class="hljs-keyword">public</span> BigDecimal <span class="hljs-title function_">add</span><span class="hljs-params">(BigDecimal b)</span>;<br><span class="hljs-keyword">public</span> BigDecimal <span class="hljs-title function_">subtract</span><span class="hljs-params">(BigDecimal b)</span>;<br><span class="hljs-keyword">public</span> BigDecimal <span class="hljs-title function_">multiply</span><span class="hljs-params">(BigDecimal b)</span>;<br><span class="hljs-keyword">public</span> BigDecimal <span class="hljs-title function_">divide</span><span class="hljs-params">(BigDecimal b)</span>;<br><span class="hljs-keyword">public</span> BigDecimal <span class="hljs-title function_">divide</span> <span class="hljs-params">(另一个BigDecimal对象，精确几位，舍入模式)</span> ;<br></code></pre></td></tr></table></figure><h3 id="字符串相关类">字符串相关类</h3><h4 id="stringbuilder">StringBuilder</h4><blockquote><p>可变的字符串类，改善String操作效率。</p><p>因为String在Java中是不可操作的，每次对String类型进行+-操作都会新建整个字符串</p></blockquote><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><code class="hljs Java"><span class="hljs-keyword">public</span> <span class="hljs-title function_">StringBuilder</span><span class="hljs-params">()</span>;<br><span class="hljs-keyword">public</span> <span class="hljs-title function_">StringBuilder</span><span class="hljs-params">(String str)</span>;<br><span class="hljs-keyword">public</span> StringBuilder <span class="hljs-title function_">append</span><span class="hljs-params">(任意类型)</span>;<br><span class="hljs-keyword">public</span> StringBuilder <span class="hljs-title function_">reverse</span><span class="hljs-params">()</span>;<br><span class="hljs-keyword">public</span> <span class="hljs-type">int</span> <span class="hljs-title function_">length</span><span class="hljs-params">()</span>;<br><span class="hljs-keyword">public</span> String <span class="hljs-title function_">toString</span><span class="hljs-params">()</span>;<br></code></pre></td></tr></table></figure><h4 id="正则表达式">正则表达式</h4><blockquote><p>格式化匹配字符</p></blockquote><h5 id="matches">matches</h5><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs Java"><span class="hljs-keyword">public</span> <span class="hljs-type">boolean</span> <span class="hljs-title function_">matches</span><span class="hljs-params">(String regex)</span>;<br></code></pre></td></tr></table></figure><img src="/2022/05/03/Java%20SE%E5%AD%A6%E4%B9%A0/image-17.png" class=""><blockquote><p>字符类，匹配一个字符</p></blockquote><img src="/2022/05/03/Java%20SE%E5%AD%A6%E4%B9%A0/image-18.png" class=""><img src="/2022/05/03/Java%20SE%E5%AD%A6%E4%B9%A0/image-19.png" class=""><blockquote><p>预定义字符类，默认匹配一个字符</p></blockquote><img src="/2022/05/03/Java%20SE%E5%AD%A6%E4%B9%A0/image-20.png" class=""><img src="/2022/05/03/Java%20SE%E5%AD%A6%E4%B9%A0/image-21.png" class=""><blockquote><p>匹配多个字符</p></blockquote><img src="/2022/05/03/Java%20SE%E5%AD%A6%E4%B9%A0/image-22.png" class=""><ul><li>案例1：请编写程序模拟用户输入手机号码、验证格式正确，并给出提示，直到格式输入正确为止</li></ul><img src="/2022/05/03/Java%20SE%E5%AD%A6%E4%B9%A0/image-23.png" class=""><ul><li>案例2：请编写程序模拟用户输入邮箱号码、验证格式正确，并给出提示，直到格式输入正确为止</li></ul><img src="/2022/05/03/Java%20SE%E5%AD%A6%E4%B9%A0/image-24.png" class=""><ul><li>案例3：请编写程序模拟用户输入电话号码、验证格式正确，并给出提示，直到格式输入正确为止</li></ul><img src="/2022/05/03/Java%20SE%E5%AD%A6%E4%B9%A0/image-25.png" class=""><h5 id="replacesplit">replace/split</h5><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><code class="hljs java"><span class="hljs-comment">//按照正则表达式匹配的内容进行替换</span><br><span class="hljs-keyword">public</span> String <span class="hljs-title function_">replaceAll</span><span class="hljs-params">(String regex,String newStr)</span>;<br><span class="hljs-comment">//按照正则表达式匹配的内容进行分割字符串，反回一个字符串数组</span><br><span class="hljs-keyword">public</span> String[] split(String regex);<br></code></pre></td></tr></table></figure><img src="/2022/05/03/Java%20SE%E5%AD%A6%E4%B9%A0/image-26.png" class=""><h5 id="爬取信息">爬取信息</h5><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><code class="hljs Java"><span class="hljs-type">String</span> <span class="hljs-variable">regex</span> <span class="hljs-operator">=</span> <span class="hljs-string">&quot;\\w&#123;1,30&#125;@[a-zA-Z0-9]&#123;2,20&#125;(\\.[a-zA-Z0-9]&#123;2,20&#125;)&#123;1,2&#125;&quot;</span> +<span class="hljs-comment">//邮箱</span><br>  <span class="hljs-string">&quot;|1[3-0]\\d&#123;9&#125;&quot;</span> +<span class="hljs-comment">//手机号码</span><br>  <span class="hljs-string">&quot;|(0\\d&#123;2,6&#125;-?\\d&#123;5,20&#125;)|(400-?\\d&#123;3,9&#125;-?\\d&#123;3,9&#125;)&quot;</span><span class="hljs-comment">//电话号码</span><br><span class="hljs-type">Pattern</span> <span class="hljs-variable">pattern</span> <span class="hljs-operator">=</span> Pattern.compile(regex);<br><span class="hljs-type">Matcher</span> <span class="hljs-variable">mathcer</span> <span class="hljs-operator">=</span> pattern.matcher(rs);<br><span class="hljs-keyword">while</span>(matcher.find())&#123;<br>  <span class="hljs-type">String</span> <span class="hljs-variable">rs1</span> <span class="hljs-operator">=</span> matcher.group();<br>  System.out.println(rs1);<br>&#125;<br></code></pre></td></tr></table></figure><img src="/2022/05/03/Java%20SE%E5%AD%A6%E4%B9%A0/image-27.png" class=""><h3 id="object-1">Object</h3><blockquote><p>根本类</p></blockquote><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs Java"><span class="hljs-keyword">public</span> String <span class="hljs-title function_">toString</span><span class="hljs-params">()</span>;<span class="hljs-comment">//返回对象在堆中地址---类的全限名@内存地址，重写以返回子类信息</span><br><span class="hljs-keyword">public</span> <span class="hljs-type">boolean</span> <span class="hljs-title function_">equals</span><span class="hljs-params">(Object o)</span>; <span class="hljs-comment">//判断两个实例地址是否相同</span><br></code></pre></td></tr></table></figure><h3 id="objects">Objects</h3><blockquote><p>工具类</p></blockquote><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs Java"><span class="hljs-keyword">public</span> <span class="hljs-keyword">static</span> <span class="hljs-type">boolean</span> <span class="hljs-title function_">equals</span><span class="hljs-params">(Object a, Object b)</span>;<br><span class="hljs-keyword">public</span> <span class="hljs-keyword">static</span> <span class="hljs-type">boolean</span> <span class="hljs-title function_">isNull</span><span class="hljs-params">(Object obj)</span>;<br></code></pre></td></tr></table></figure><h3 id="时间相关类">时间相关类</h3><h4 id="data">Data</h4><blockquote><p>系统日期</p></blockquote><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><code class="hljs Java"><span class="hljs-keyword">public</span> <span class="hljs-title function_">Data</span><span class="hljs-params">()</span>; <span class="hljs-comment">//此刻时间</span><br><span class="hljs-keyword">public</span> <span class="hljs-title function_">Date</span><span class="hljs-params">(<span class="hljs-type">long</span> time)</span>;<span class="hljs-comment">//time单位为毫秒</span><br><span class="hljs-keyword">public</span> <span class="hljs-type">long</span> <span class="hljs-title function_">getTime</span><span class="hljs-params">()</span>;<span class="hljs-comment">//返回从1970年1月1日00:00:00走到此刻的总的毫秒数</span><br><span class="hljs-keyword">public</span> <span class="hljs-keyword">void</span> <span class="hljs-title function_">setTime</span><span class="hljs-params">(<span class="hljs-type">long</span> time)</span>;<span class="hljs-comment">//设置日期对象的时间为当前时间毫秒值对应的时间</span><br><span class="hljs-keyword">public</span> <span class="hljs-type">boolean</span> <span class="hljs-title function_">before</span><span class="hljs-params">(Date when)</span>;<br><span class="hljs-keyword">public</span> <span class="hljs-type">boolean</span> <span class="hljs-title function_">after</span><span class="hljs-params">(Date when)</span>;<br></code></pre></td></tr></table></figure><h4 id="simpledateformat">SimpleDateFormat</h4><blockquote><p>实现日期时间格式化</p></blockquote><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs Java"><span class="hljs-keyword">public</span> <span class="hljs-title function_">SimpleDateFormat</span><span class="hljs-params">(String pattern)</span>;<br></code></pre></td></tr></table></figure><img src="/2022/05/03/Java%20SE%E5%AD%A6%E4%B9%A0/image-9.png" class=""><img src="/2022/05/03/Java%20SE%E5%AD%A6%E4%B9%A0/image-10.png" class=""><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs Java"><span class="hljs-keyword">public</span> <span class="hljs-keyword">final</span> String <span class="hljs-title function_">format</span><span class="hljs-params">(Date date)</span>;<span class="hljs-comment">//将日期格式化成日期/时间字符串</span><br><span class="hljs-keyword">public</span> <span class="hljs-keyword">final</span> String <span class="hljs-title function_">format</span><span class="hljs-params">(Object time)</span>;<span class="hljs-comment">//将时间毫秒值式化成日期/时间字符串</span><br><span class="hljs-keyword">public</span> Date <span class="hljs-title function_">parse</span><span class="hljs-params">(String source)</span>;<span class="hljs-comment">//从给定字符串的开始解析文本以生成日期</span><br></code></pre></td></tr></table></figure><img src="/2022/05/03/Java%20SE%E5%AD%A6%E4%B9%A0/image-11.png" class=""><h4 id="calendar">Calendar</h4><blockquote><p>抽象类</p><p>代表了系统此刻日期对应的日历对象</p><p>可变日期对象</p></blockquote><p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><code class="hljs Java"><span class="hljs-keyword">public</span> <span class="hljs-keyword">static</span> Calendar <span class="hljs-title function_">getInstance</span><span class="hljs-params">()</span>;<span class="hljs-comment">//获取当前日历对象</span><br><br><span class="hljs-type">Calendar</span> <span class="hljs-variable">cal</span> <span class="hljs-operator">=</span> Calendar.getInstance();<br>system.out.println(cal);<br></code></pre></td></tr></table></figure> <figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs Java"><span class="hljs-keyword">public</span> <span class="hljs-type">int</span> <span class="hljs-title function_">get</span><span class="hljs-params">(<span class="hljs-type">int</span> field)</span><br></code></pre></td></tr></table></figure></p><img src="/2022/05/03/Java%20SE%E5%AD%A6%E4%B9%A0/image-12-1631919.png" class=""><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><code class="hljs Java"><span class="hljs-keyword">public</span> <span class="hljs-keyword">void</span> <span class="hljs-title function_">set</span><span class="hljs-params">(<span class="hljs-type">int</span> field,<span class="hljs-type">int</span> value)</span>;<span class="hljs-comment">//修改日历的某个字段信息。</span><br><span class="hljs-keyword">public</span> <span class="hljs-keyword">void</span> <span class="hljs-title function_">add</span><span class="hljs-params">(<span class="hljs-type">int</span> field,<span class="hljs-type">int</span> amount)</span>;<span class="hljs-comment">//为某个字段增加/减少指定的值</span><br><span class="hljs-keyword">public</span> <span class="hljs-keyword">final</span> Date <span class="hljs-title function_">getTime</span><span class="hljs-params">()</span>;<span class="hljs-comment">//拿到此刻日期对象。</span><br><span class="hljs-keyword">public</span> <span class="hljs-type">long</span> <span class="hljs-title function_">getTimeInMillis</span><span class="hljs-params">()</span>;<span class="hljs-comment">//拿到此刻时间毫秒值</span><br></code></pre></td></tr></table></figure><h4 id="localtime-localdate-localdatetime">LocalTime /LocalDate / LocalDateTime</h4><blockquote><p>不变数据类型，类似于String</p></blockquote><img src="/2022/05/03/Java%20SE%E5%AD%A6%E4%B9%A0/image-13.png" class=""><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br></pre></td><td class="code"><pre><code class="hljs Java"><span class="hljs-comment">//构造方法</span><br><span class="hljs-keyword">public</span> <span class="hljs-keyword">static</span> Xxxx <span class="hljs-title function_">now</span><span class="hljs-params">()</span>;<span class="hljs-comment">//根据当前时间创建对象</span><br><br><span class="hljs-type">LocaDate</span> <span class="hljs-variable">localDate</span> <span class="hljs-operator">=</span> LocalDate.now();<br><span class="hljs-type">LocalTime</span> <span class="hljs-variable">llocalTime</span> <span class="hljs-operator">=</span> LocalTime.now();<br><span class="hljs-type">LocalDateTime</span> <span class="hljs-variable">localDateTime</span> <span class="hljs-operator">=</span> LocalDateTime.now();<br><br><span class="hljs-keyword">public</span> <span class="hljs-keyword">static</span> Xxxx <span class="hljs-title function_">of</span><span class="hljs-params">(…)</span>;<span class="hljs-comment">//指定日期/时间创建对象</span><br><br><span class="hljs-type">LocalDate</span> <span class="hljs-variable">localDate1</span> <span class="hljs-operator">=</span> LocalDate.of(<span class="hljs-number">2099</span> , <span class="hljs-number">11</span>,<span class="hljs-number">11</span>);<br><span class="hljs-type">LocalTime</span> <span class="hljs-variable">localTime1</span> <span class="hljs-operator">=</span> LocalTime.of(<span class="hljs-number">11</span>, <span class="hljs-number">11</span>, <span class="hljs-number">11</span>);<br><span class="hljs-type">LocalDateTime</span> <span class="hljs-variable">localDateTime1</span> <span class="hljs-operator">=</span> LocalDateTime.of(<span class="hljs-number">2020</span>, <span class="hljs-number">10</span>, <span class="hljs-number">6</span>, <span class="hljs-number">13</span>, <span class="hljs-number">23</span>, <span class="hljs-number">43</span>);<br><br><span class="hljs-comment">//获取字段</span><br><span class="hljs-keyword">public</span> <span class="hljs-type">int</span> <span class="hljs-title function_">geYear</span><span class="hljs-params">()</span>;<br><span class="hljs-keyword">public</span> <span class="hljs-type">int</span> <span class="hljs-title function_">getMonthValue</span><span class="hljs-params">()</span>;<br><span class="hljs-keyword">public</span> <span class="hljs-type">int</span> <span class="hljs-title function_">getDayOfMonth</span><span class="hljs-params">()</span>;<br><span class="hljs-keyword">public</span> <span class="hljs-type">int</span> <span class="hljs-title function_">getDayOfYear</span><span class="hljs-params">()</span>;<br><span class="hljs-keyword">public</span> DayOfWeek <span class="hljs-title function_">getDayOfWeek</span><span class="hljs-params">()</span>;<br><br><span class="hljs-comment">//转换API</span><br><span class="hljs-keyword">public</span> LocalDate <span class="hljs-title function_">toLocalDate</span><span class="hljs-params">()</span>;<br><span class="hljs-keyword">public</span> LocalTime <span class="hljs-title function_">toLocalTime</span><span class="hljs-params">()</span>;<br><br><span class="hljs-comment">//修改API</span><br>plusDays, plusWeeks, plusMonths, plusYears<br>minusDays, minusWeeks, minusMonths, minusYears<br>withDayOfMonth, withDayOfYear, withMonth, withYear<br>isBefore, isAfter<br></code></pre></td></tr></table></figure><h4 id="instant">Instant</h4><img src="/2022/05/03/Java%20SE%E5%AD%A6%E4%B9%A0/image-14.png" class=""><h4 id="datatimeformatter">DataTimeFormatter</h4><blockquote><p>在JDK8中，引入了一个全新的日期与时间格式器DateTimeFormatter</p></blockquote><img src="/2022/05/03/Java%20SE%E5%AD%A6%E4%B9%A0/image-36.png" class=""><h4 id="durationperiod">Duration/Period</h4><blockquote><p>日期间隔差异</p></blockquote><img src="/2022/05/03/Java%20SE%E5%AD%A6%E4%B9%A0/image-37.png" class=""><blockquote><p>时间间隔差异</p></blockquote><img src="/2022/05/03/Java%20SE%E5%AD%A6%E4%B9%A0/image-38.png" class=""><h4 id="chronounit">ChronoUnit</h4><blockquote><p>ChronoUnit类可用于在单个时间单位内测量一段时间，这个工具类是最全的了，可以用于比较所有的时间单位</p></blockquote><img src="/2022/05/03/Java%20SE%E5%AD%A6%E4%B9%A0/image-39.png" class=""><h3 id="数据结构相关类">数据结构相关类</h3><h4 id="集合类">集合类</h4><blockquote><p>不仅充当容器，而且不同容器可以充分代表不同容器内各种数据的关系</p></blockquote><img src="/2022/05/03/Java%20SE%E5%AD%A6%E4%B9%A0/image-2-1651503.png" class=""><h5 id="collection">Collection</h5><blockquote><p>存储数据</p></blockquote><img src="/2022/05/03/Java%20SE%E5%AD%A6%E4%B9%A0/image-1651493.png" class=""><ul><li>常用API</li></ul><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs java">add;clear;remove;<br>contains;isEmpty;<br>size;toArray;addAll;<br></code></pre></td></tr></table></figure><ul><li><p>遍历方法</p><ul><li>迭代器</li></ul><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><code class="hljs Java">ArrayList&lt;String&gt; lists = <span class="hljs-keyword">new</span> <span class="hljs-title class_">ArrayList</span>&lt;&gt;();<br>Iterator&lt;String&gt; it = lists.iterator();<br><br><span class="hljs-comment">//询问当前位置是否有元素存在，存在返回true ,不存在返回false</span><br><span class="hljs-type">boolean</span> <span class="hljs-title function_">hasNext</span><span class="hljs-params">()</span><br><br><span class="hljs-comment">//获取当前位置的元素，并同时将迭代器对象移向下一个位置，注意防止取出越界。</span><br><span class="hljs-comment">//迭代器如果取元素越界会出现NoSuchElementException异常</span><br>E <span class="hljs-title function_">next</span><span class="hljs-params">()</span>;<br><br><span class="hljs-keyword">while</span>(it.hasNext())&#123;<br>  <span class="hljs-type">String</span> <span class="hljs-variable">ele</span> <span class="hljs-operator">=</span> it.next();<br>  System.out.println(ele);<br>&#125;<br></code></pre></td></tr></table></figure><ul><li>foreach语法</li></ul><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs Java"><span class="hljs-keyword">for</span>(<span class="hljs-type">int</span> i : arrs)&#123;<br>  <br>&#125;<br></code></pre></td></tr></table></figure><ul><li>lambada语法</li></ul><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs java">lists.forEach(System.out.println);<br></code></pre></td></tr></table></figure></li><li><p>删除</p></li></ul><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs java"><span class="hljs-comment">//迭代器中使用</span><br>it.remove();<br></code></pre></td></tr></table></figure><h6 id="list">List</h6><blockquote><p>有序，可重复，有索引</p></blockquote><ul><li>独有API</li></ul><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs java">add; remove; set; get;<br></code></pre></td></tr></table></figure><ul><li><p>两种数据结构</p><ul><li><p>ArrayList</p><blockquote><p>连续内存空间，当内从空间不够时开辟大空间</p></blockquote></li><li><p>LinkedList</p><blockquote><p>双向链表</p></blockquote><ul><li>独有API</li></ul><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs Java">addFirst;addLast;<br>getFirst; getLast;<br>removeFirst;removeLast;<br></code></pre></td></tr></table></figure></li></ul></li></ul><h6 id="set">Set</h6><blockquote><p>无序，不重复，无索引</p></blockquote><ul><li><p>HashSet</p><blockquote><p>无序，不重复，无索引</p></blockquote><ul><li>底层采用哈希表</li><li>实例对象存储时需要重写方法</li></ul><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><code class="hljs java"><span class="hljs-comment">//根据对象属性值生成哈希值</span><br><span class="hljs-meta">@Override</span><br><span class="hljs-keyword">public</span> <span class="hljs-type">int</span> <span class="hljs-title function_">hashCode</span><span class="hljs-params">()</span> &#123;<br><span class="hljs-keyword">return</span> Objects.hash(age,sex);<br>&#125;<br><br><br><span class="hljs-comment">//根据对象属性值进一步判断对象是否重复</span><br><span class="hljs-meta">@Override</span><br><span class="hljs-keyword">public</span> <span class="hljs-type">boolean</span> <span class="hljs-title function_">equals</span><span class="hljs-params">(Object obj)</span> &#123;<br>  <span class="hljs-keyword">if</span>(<span class="hljs-built_in">this</span>==obj)<br>    <span class="hljs-keyword">return</span> <span class="hljs-literal">true</span>;<br>  <span class="hljs-keyword">if</span>(obj==<span class="hljs-literal">null</span> ||<span class="hljs-built_in">this</span>.getClass()!=obj.getClass())<br>    <span class="hljs-keyword">return</span> <span class="hljs-literal">false</span>;<br>  Student stu=(Student) obj;<br>  <span class="hljs-keyword">return</span> <span class="hljs-built_in">this</span>.age==stu.age &amp;&amp; <span class="hljs-built_in">this</span>.sex==stu.sex;<br>&#125;<br></code></pre></td></tr></table></figure></li><li><p>LinkedHashSet</p><blockquote><p>有序，不重复，无索引</p></blockquote></li><li><p>TreeSet</p><blockquote><p>可排序，不重复，无索引</p></blockquote></li></ul><h5 id="collections">Collections</h5><blockquote><p>集合工具类</p></blockquote><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><code class="hljs java"><span class="hljs-comment">//给集合对象批量添加元素</span><br><span class="hljs-keyword">public</span> <span class="hljs-keyword">static</span> &lt;T&gt; <span class="hljs-type">boolean</span> <span class="hljs-title function_">addAll</span><span class="hljs-params">(Collection&lt;? <span class="hljs-built_in">super</span> T&gt; c, T... elements)</span>;<br><br><span class="hljs-comment">//打乱List集合元素的顺序</span><br><span class="hljs-keyword">public</span> <span class="hljs-keyword">static</span> <span class="hljs-keyword">void</span> <span class="hljs-title function_">shuffle</span><span class="hljs-params">(List&lt;?&gt; list)</span>;<br><br><span class="hljs-comment">//将集合中元素按照默认规则排序</span><br><span class="hljs-comment">//注意：本方式不可以直接对自定义类型的List集合排序，除非自定义类型实现了比较规则Comparable接口。</span><br><span class="hljs-keyword">public</span> <span class="hljs-keyword">static</span> &lt;T&gt; <span class="hljs-keyword">void</span> <span class="hljs-title function_">sort</span><span class="hljs-params">(List&lt;T&gt; list)</span><br><span class="hljs-keyword">public</span> <span class="hljs-keyword">static</span> &lt;T&gt; <span class="hljs-keyword">void</span> <span class="hljs-title function_">sort</span><span class="hljs-params">(List&lt;T&gt; list，Comparator&lt;? <span class="hljs-built_in">super</span> T&gt; c)</span><br></code></pre></td></tr></table></figure><h5 id="map待补充">Map（待补充）</h5><h3 id="包装类">包装类</h3><blockquote><p>Java为了实现一切皆对象，为8种基本类型提供了对应的引用类型</p><p>集合和泛型其实只能支持包装类型，不支持基本数据类型</p></blockquote><img src="/2022/05/03/Java%20SE%E5%AD%A6%E4%B9%A0/image-15.png" class=""><ul><li><p>自动装箱：基本类型的数据和变量可以直接赋值给包装类型的变量</p></li><li><p>自动拆箱：包装类型的变量可以直接赋值给基本数据类型的变量</p></li><li><p>特别之处</p><ul><li>包装类的变量的默认值可以是null，容错率更高</li><li>可以把基本类型的数据转换成字符串类型</li><li>可以把字符串类型的数值转换成真实的数据类型</li></ul><img src="/2022/05/03/Java%20SE%E5%AD%A6%E4%B9%A0/image-16.png" class=""></li></ul><h3 id="arrays">Arrays</h3><blockquote><p>数组操作工具类</p></blockquote><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><code class="hljs Java"><span class="hljs-keyword">public</span> <span class="hljs-keyword">static</span> String <span class="hljs-title function_">toString</span><span class="hljs-params">(类型[] a)</span>;<br><span class="hljs-keyword">public</span> <span class="hljs-keyword">static</span> <span class="hljs-keyword">void</span> <span class="hljs-title function_">sort</span><span class="hljs-params">(类型[] a)</span>;<br><span class="hljs-keyword">public</span> <span class="hljs-keyword">static</span> &lt;T&gt; <span class="hljs-keyword">void</span> <span class="hljs-title function_">sort</span><span class="hljs-params">(类型[] a, Comparator&lt;? <span class="hljs-built_in">super</span> T&gt; c)</span>;<br><span class="hljs-keyword">public</span> <span class="hljs-keyword">static</span> <span class="hljs-type">int</span> <span class="hljs-title function_">binarySearch</span><span class="hljs-params">(<span class="hljs-type">int</span>[] a, <span class="hljs-type">int</span> key)</span>;<br></code></pre></td></tr></table></figure><img src="/2022/05/03/Java%20SE%E5%AD%A6%E4%B9%A0/image-28.png" class=""><h2 id="语法">语法</h2><h3 id="lambda表达式">Lambda表达式</h3><blockquote><p>简化函数式接口匿名类代码写法</p></blockquote><img src="/2022/05/03/Java%20SE%E5%AD%A6%E4%B9%A0/image-33.png" class=""><ul><li><p>函数式接口</p><ul><li>必须是接口</li><li>接口中只有一个抽象方法啊</li><li>函数式接口上有<code>@FunctionalInterface</code>注释</li></ul><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><code class="hljs java"><span class="hljs-meta">@FunctionalInterface</span><br><span class="hljs-keyword">interface</span> <span class="hljs-title class_">Swimming</span>&#123;<br>  <span class="hljs-keyword">void</span> <span class="hljs-title function_">swim</span><span class="hljs-params">()</span>;<br>&#125;<br><br><span class="hljs-keyword">public</span> <span class="hljs-keyword">static</span> <span class="hljs-keyword">void</span> <span class="hljs-title function_">go</span><span class="hljs-params">(Swimming s)</span>&#123;<br>  s.swim();<br>&#125;<br><br>Swimming s1=()-&gt;System.out.println(<span class="hljs-string">&quot;gogogo&quot;</span>);<br>go(s1);<br></code></pre></td></tr></table></figure></li><li><p>实例</p></li></ul><img src="/2022/05/03/Java%20SE%E5%AD%A6%E4%B9%A0/image-34.png" class=""><img src="/2022/05/03/Java%20SE%E5%AD%A6%E4%B9%A0/image-35.png" class=""><ul><li>省略规则<ul><li>参数类型可以省略不写</li><li>如果只有一个参数，参数类型可以省略，同时()也可以省略</li><li>如果Lambda表达式的方法体代码只有一行代码。可以省略大括号不写,同时要省略分号</li><li>如果Lambda表达式的方法体代码只有一行代码。可以省略大括号不写。此时，如果这行代码是return语句，必须省略return不写，同时也必须省略";"不写</li></ul></li></ul><h3 id="泛型">泛型</h3><h4 id="修饰类">修饰类</h4><h4 id="修饰方法">修饰方法</h4><h4 id="修饰接口">修饰接口</h4><h2 id="文件引用关系">文件引用关系</h2><ul><li>一个Java文件中可以定义多个类，但是只能有一个类是用public修饰的，public修饰的类名必须成为Java代码的文件名称（建议一个文件只建立一个类）</li><li>同一个包下的类可以互相访问，不同包下的类，必须导包才可以访问：import com....</li><li>同一个类中可以使用多个同名的类，但是默认只能导入一个，其他用包名.类名</li></ul><h2 id="框架">框架</h2><h3 id="logback">Logback</h3><blockquote><p>日志框架</p></blockquote><h3 id="junit">Junit</h3><blockquote><p>单元测试框架</p></blockquote><h3 id="dom4j">dom4j</h3><blockquote><p>xml解析框架</p></blockquote>]]></content>
    
    
    <categories>
      
      <category>foundation of computer science</category>
      
      <category>programming language</category>
      
      <category>Java</category>
      
    </categories>
    
    
    <tags>
      
      <tag>learning</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>游戏清单</title>
    <link href="/2022/05/02/%E6%B8%B8%E6%88%8F%E6%B8%85%E5%8D%95/"/>
    <url>/2022/05/02/%E6%B8%B8%E6%88%8F%E6%B8%85%E5%8D%95/</url>
    
    <content type="html"><![CDATA[<h2 id="类型">类型</h2><h3 id="经营模拟">经营模拟</h3><ul><li>牧场物语</li><li>星露谷物语</li></ul><h3 id="剧情体验">剧情体验</h3><ul><li>寒蝉鸣泣之时</li><li>Clannad</li><li>Summer Pocket</li><li>逆转裁判</li><li>幽灵诡计</li><li>奇异人生</li><li>To the Moon系列</li></ul><h3 id="横版动作">横版动作</h3><ul><li>空洞骑士</li><li>死亡细胞</li><li>武士零</li></ul><h3 id="开放世界">开放世界</h3><ul><li>塞尔达传说：荒野之息</li><li>GTA</li></ul><h3 id="策略规划">策略规划</h3><ul><li><p>文明</p></li><li><p>群星</p></li><li><p>火焰纹章：风花雪月</p></li><li><p>八方旅人</p></li></ul><h3 id="宝可梦">宝可梦</h3><ul><li>火红·叶绿</li><li>红宝石·蓝宝石</li><li>珍珠·钻石</li><li>剑·盾</li><li>阿尔宙斯</li></ul>]]></content>
    
    
    <categories>
      
      <category>life</category>
      
      <category>game</category>
      
    </categories>
    
    
    <tags>
      
      <tag>entertainment</tag>
      
      <tag>list</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>Git学习</title>
    <link href="/2022/05/01/Git%E5%AD%A6%E4%B9%A0/"/>
    <url>/2022/05/01/Git%E5%AD%A6%E4%B9%A0/</url>
    
    <content type="html"><![CDATA[<h2 id="init-a-git-repo">1 Init a git repo</h2><blockquote><p>参考链接: <a href="https://docs.microsoft.com/zh-cn/learn/modules/introduction-to-github/">msdn</a>(微软提供的github学习教程 )</p></blockquote><ol type="1"><li>init local repo <code>git init</code></li><li>create github repo</li><li>push your local repo to github repo <code>git push</code></li></ol><h2 id="trouble-shooting">2 Trouble shooting</h2><ol type="1"><li>Can't use <code>git push</code> from my terminal</li></ol><blockquote><p><a href="https://docs.github.com/en/authentication/troubleshooting-ssh/error-permission-denied-publickey">permission denied</a></p><p><a href="https://docs.github.com/en/authentication/connecting-to-github-with-ssh/generating-a-new-ssh-key-and-adding-it-to-the-ssh-agent">generate ssh key</a></p><p><a href="https://docs.github.com/en/authentication/connecting-to-github-with-ssh/adding-a-new-ssh-key-to-your-github-account">config ssh to github</a></p><p>os: config ssh and something other... daunt me really...</p></blockquote><h2 id="reference">3 Reference</h2><ol type="1"><li><a href="https://docs.github.com/en/get-started/using-git/about-git#basic-git-commands">about git</a>(github上对git的介绍)</li><li><a href="https://git-scm.com/docs">git-reference</a>(git官网命令行参考手册 os: 我就看了几分钟，啃不动硌牙)</li><li><a href="https://git-scm.com/book/en/v2">Pro Git</a>(很详细的官方推荐书籍，只用看前几章就可以了 os: 这个倒可以花时间认真看看，写得不错)</li></ol><h2 id="git-learning-notes">4 Git learning notes</h2><blockquote><p>因为git版本更新具有backward compatibility，所以很多指令的功能有所重叠，建议选择最直观常用的指令记忆</p></blockquote><h3 id="针对repo开发的常规指令">针对repo开发的常规指令</h3><figure class="highlight plaintext"><table><tr><td class="gutter"><div class="code-wrapper"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></div></td><td class="code"><pre><code class="hljs command">git add<br>git commit [-m] [-a]<br>git diff [--staged]<br>git status [--short]<br>git rm [-f] [--cache](--cache指明从staged area删除该文件但不从working directory删除文件)<br>git mv (用来对文件进行重命名)<br></code></pre></td></tr></table></figure><h3 id="针对repo配置的指令">针对repo配置的指令</h3><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><code class="hljs command">git init<br>git clone<br>git config<br>git push<br></code></pre></td></tr></table></figure><h3 id="显示repo开发记录log">显示repo开发记录(log)</h3><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><code class="hljs command">git log [--patch] [--stat] <br>[--pretty=oneline(short/full/fuller/format:&quot;%h - %an, %ar : %s&quot;)] <br>[--graph] [-&lt;n&gt;](e.g. -2) [--since=2.weeks] [--until=] [--auther] [--grep] <br>[-S &lt;string&gt;] (pickax option, 用来显示指定字符串次数改变的commit os: 建议通过实例理解) <br>[-- &lt;path&gt;] (重要，用于显示路径文件或文件夹更改过的commit)<br><br>e.g.<br>For example, if you want to see which commits modifying test files in the Git source code history were committed by Junio Hamano in the month of October 2008 and are not merge commits, you can run something like this:<br>git log --pretty=&quot;%h - %s&quot; --author=&#x27;Junio C Hamano&#x27; --since=&quot;2008-10-01&quot; \<br>   --before=&quot;2008-11-01&quot; --no-merges -- t/<br></code></pre></td></tr></table></figure><h3 id="进行repo操作回退">进行repo操作回退</h3><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs command">git commit [--amend] (对上次commit进行修补工作)<br>git restore(对working directory进行恢复) [--staged](对staged area进行恢复)<br></code></pre></td></tr></table></figure><h3 id="远程repo协作remote">远程repo协作(remote)</h3><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><code class="hljs command">git remote [-v] (显示URLs)<br>git remote add &lt;shortname&gt; &lt;url&gt;<br>git fetch &lt;remote&gt;<br>git pull (在fetch基础上进行merge, 如果pull.febase变量没有设定则会给出警告)<br>git config --global pull.rebase &quot;true&quot; (pulling时进行rebase)<br>git push &lt;remote&gt; &lt;branch&gt; (如果和别人同时clone后而别人先push的话你再push就会被reject, 你需要fetch后incorporate别人代码后再push)<br><br>git remote show &lt;remote&gt;<br>git remote rename &lt;remote&gt; &lt;new_remote&gt;<br>git remote remove &lt;remote&gt;<br></code></pre></td></tr></table></figure><h3 id="git-tricks">git tricks</h3><figure class="highlight jboss-cli"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs jboss-cli">git config <span class="hljs-params">--global</span> <span class="hljs-keyword">alias</span>.&lt;<span class="hljs-keyword">alias</span>&gt; &lt;<span class="hljs-keyword">command</span>&gt;<br></code></pre></td></tr></table></figure><p>(e.g. git config --global alias.st status, you can type <code>git last</code> instead <code>git 'git log -1 HEAD'</code>)</p><figure class="highlight pgsql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs pgsql">git config -<span class="hljs-keyword">global</span> credential.helper <span class="hljs-keyword">cache</span><br></code></pre></td></tr></table></figure><p>(using HTTPS URL to push and don't wanna to type password everytime, see more in <a href="https://git-scm.com/book/en/v2/Git-Tools-Credential-Storage#_credential_caching">credential storage</a>)</p><h3 id="git-branch-management">git branch management</h3><ul><li>branching model</li></ul><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><code class="hljs command">-git branch &lt;branch&gt; (create a new branch)<br>git branch -d &lt;branch&gt; (delete a branch)<br><br>git checkout &lt;branch&gt; (switch to a new branch)<br>git checkout -b &lt;branch&gt; (create and switch to a new branch)<br><br>git log --oneline --decorate --graph --all (paint a tree with all branches. os: cool!!!)<br><br>git switch [-c/--create]  &lt;branch&gt;<br>git swtich - (switch to previous branch)<br><br>git merge &lt;branch&gt; (e.g. git check out master | git merge hotfix)<br>git merge --abort (abort the merge)<br>git mergetool (graphical tool to resolve issues)<br></code></pre></td></tr></table></figure><ul><li>useful command</li></ul><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><code class="hljs command">git branch [-v] (list all exiting branches) [-all] (including remote branches)<br>git branch [--merged/--no_merged]<br>git branch --move &lt;old_branch_name&gt; &lt;new_branch_name&gt; (change the name of branch)<br>git push --set-upstream origin &lt;new_branch_name&gt; (push new/rename branch to remote)<br>git push &lt;origin&gt; --delete &lt;branch&gt;<br></code></pre></td></tr></table></figure><ul><li>branching workflow</li></ul><ol type="1"><li>Longing-Running Branches (A long commits with multiple branches in different stages) </li><li>Topic Branches </li></ol><ul><li>remote branches</li></ul><p>branches name like <code>origin/main</code></p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><code class="hljs command">git fetch &lt;remote&gt; (get remote database without omit)<br>git push &lt;remote&gt; &lt;branch&gt;:&lt;branch_newname&gt; (&#x27;:&#x27;以及后面部分可省略)<br>git merge &lt;remote/branch&gt; (merge remote work to current working branch)<br>git checkout -b &lt;branch&gt; &lt;remote/branch&gt; (create a new branch that you can work on)<br>git checkout --track &lt;remote/branch&gt; (shorhand of the previous command)<br>git checkout &lt;branch&gt; (shorhand of the previous command when branch (a)doesn&#x27;t exit (b)match a name on only one remote)<br>git branch [-u | --set-upstream-to] &lt;remote/branch&gt; (set current working branch to track remote branch)<br>git branch -vv (show local branches and the remote branches they track)<br><br>upstream shorthand: @&#123;upstream&#125; | @&#123;u&#125;<br></code></pre></td></tr></table></figure><ul><li>配合服务器使用的一些常用命令</li></ul><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">git reset --hard  //撤销工作区与缓冲区所有修改, 并将工作区恢复至最后一次commit状态<br></code></pre></td></tr></table></figure><h3 id="problems-to-be-solved">problems to be solved</h3><ol type="1"><li>what's the meaning of <code>refs/heads</code> <a href="https://git-scm.com/book/en/v2/Git-Internals-Plumbing-and-Porcelain#ch10-git-internals">Git internals</a></li></ol>]]></content>
    
    
    <categories>
      
      <category>software</category>
      
    </categories>
    
    
    <tags>
      
      <tag>learning</tag>
      
      <tag>tool</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>电影清单</title>
    <link href="/2022/05/01/%E7%94%B5%E5%BD%B1%E6%B8%85%E5%8D%95/"/>
    <url>/2022/05/01/%E7%94%B5%E5%BD%B1%E6%B8%85%E5%8D%95/</url>
    
    <content type="html"><![CDATA[<h2 id="未分类">未分类</h2><ul><li>本杰明巴顿奇事</li><li>杀人回忆</li><li>电锯惊魂</li><li>达拉斯买家俱乐部</li><li>雨人</li><li>人工智能</li><li>树大招风</li><li>巴斯特斯克鲁斯的歌谣</li><li>江湖儿女</li><li>刺客聂隐娘</li><li>破风</li><li>阳光下的罪恶</li><li>超脱</li><li>上帝之城</li><li>记忆碎片</li><li>彗星来的那一夜</li><li>恐怖游轮</li><li>牯岭街少年杀人事件</li><li>犬之岛</li></ul><h2 id="情感类型">情感类型</h2><h3 id="欢乐">欢乐</h3><ul><li>侏罗纪公园</li></ul><h3 id="治愈">治愈</h3><ul><li>情书</li><li>海街日记</li><li>机器人总动员</li></ul><h3 id="惊悚">惊悚</h3><ul><li>惊魂记</li></ul><h3 id="思索">思索</h3><ul><li>影子武士</li><li>七武士</li><li>罗生门</li><li>发条橙</li><li>卧虎藏龙</li><li>梦之安魂曲</li><li>辛德勒的名单</li><li>现代启示录</li><li>爱情短片</li><li>索拉里斯</li><li>寄生虫</li><li>这个杀手不太冷</li></ul><h2 id="导演">导演</h2><h3 id="安德烈塔科夫斯基">安德烈塔科夫斯基</h3><ul><li>乡愁</li><li>镜子</li><li>索拉里斯</li></ul><h3 id="黑泽明">黑泽明</h3><ul><li>罗生门</li><li>用心棒</li><li>影子武士</li><li>七武士</li></ul><h3 id="是枝裕和">是枝裕和</h3><ul><li>如父如子</li><li>无人知晓</li><li>步履不停</li><li>奇迹</li><li>海街日记</li></ul><h3 id="莱昂内">莱昂内</h3><ul><li>镖客三部曲</li><li>美国往事</li></ul><h3 id="库布里克">库布里克</h3><ul><li>2001太空漫游</li><li>洛丽塔</li><li>发条橙</li></ul><h3 id="马特达蒙">马特达蒙</h3><ul><li>谍影重重</li></ul><h3 id="维伦纽瓦">维伦纽瓦</h3><ul><li>边境杀手</li></ul><h3 id="李安">李安</h3><ul><li>断背山</li><li>比利林恩的中场战事</li><li>少年派的奇幻漂流</li><li>饮食男女</li><li>色戒</li><li>卧虎藏龙</li></ul><h3 id="王家卫">王家卫</h3><ul><li>阿飞正传</li><li>旺角卡门</li><li>重庆森林</li></ul><h3 id="大卫芬奇">大卫芬奇</h3><ul><li>社交网络</li><li>搏击俱乐部</li><li>十二宫</li><li>七宗罪</li></ul><h3 id="达伦阿伦纳夫斯基">达伦阿伦纳夫斯基</h3><ul><li>梦之安魂曲</li><li>黑天鹅</li><li>圆周率</li><li>摔跤王</li><li>真爱泉源</li></ul><h3 id="希区柯克">希区柯克</h3><blockquote><p>惊悚片祖师爷，我们可以看到很多现代惊悚片都致敬了希区柯克的作品。</p></blockquote><ul><li>电话谋杀案</li><li>惊魂记</li><li>西北偏北</li></ul><h3 id="奥赛佩托纳多雷">奥赛佩托纳多雷</h3><blockquote><p>代表作是时光三部曲，因为太有名了，所以被动的了解了三部电影的全部剧情，因此并没有看过原片（还不快去看？！）</p></blockquote><ul><li>海上钢琴师</li><li>天堂电影院</li><li>西西里的美丽传说</li></ul><h3 id="宫崎骏">宫崎骏</h3><blockquote><p>日本动画大师。</p></blockquote><ul><li>千与千寻</li><li>龙猫</li><li>天空之城</li></ul><h3 id="斯皮尔伯格">斯皮尔伯格</h3><ul><li>拯救大兵瑞恩</li><li>猫鼠游戏</li><li>侏罗纪公园</li><li>辛德勒名单</li></ul><h3 id="大卫林奇">大卫·林奇</h3><ul><li>穆赫兰道</li><li>象人</li></ul><h3 id="李俊益">李俊益</h3><ul><li>素媛</li><li>思悼</li></ul><h3 id="弗朗西斯福特科波拉">弗朗西斯·福特·科波拉</h3><ul><li>教父</li><li>现代启示录</li></ul><h3 id="奥逊威尔斯">奥逊威尔斯</h3><blockquote><p>如果电影行业有天才的话，那他就是了。还有什么人能集导演、编剧、制片人、演员于一身呢？</p></blockquote><ul><li>公民凯恩</li><li>奥罗塞</li></ul><h3 id="基耶斯洛夫斯基">基耶斯洛夫斯基</h3><ul><li>十诫</li><li>杀人短片</li><li>蓝白红</li><li>爱情短片</li></ul>]]></content>
    
    
    <categories>
      
      <category>life</category>
      
      <category>movie</category>
      
    </categories>
    
    
    <tags>
      
      <tag>entertainment</tag>
      
      <tag>list</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>阅读清单</title>
    <link href="/2022/05/01/%E9%98%85%E8%AF%BB%E6%B8%85%E5%8D%95/"/>
    <url>/2022/05/01/%E9%98%85%E8%AF%BB%E6%B8%85%E5%8D%95/</url>
    
    <content type="html"><![CDATA[<h3 id="未分类">未分类</h3><ul><li>立体纸雕书:我等你</li><li>她们的传奇</li><li>美术馆全知道</li><li>奥斯维辛</li><li>杀死一只知更鸟</li><li>房思琪的初恋乐园</li><li>天朝的崩溃</li><li>娱乐至死</li><li>走出唯一真理观</li><li>教堂尖塔</li><li>如何阅读一本书</li><li>从卢梭到尼采</li><li>论自由</li><li>功利主义</li><li>哲学的故事</li><li>瘟疫与人</li><li>思想录</li><li>这是不是个人</li><li>沉默</li><li>红字</li><li>人生不设限</li><li>娱乐至死</li><li>乌合之众</li><li>蝇王</li><li>美国宪政历程</li><li>保守主义</li><li>杀死一只知更鸟</li><li>民族认同</li><li>民族主义</li><li>监狱琐记</li><li>终极之问</li><li>四种爱</li><li>德兰修女传</li><li>化身博士</li><li>夜</li><li>旧制度与大革命</li><li>布达佩斯往事</li><li>天堂沉默了半小时</li><li>我有平安如江河</li><li>青灯</li><li>沉默的大多数</li><li>袁氏当国</li><li>朱元璋传</li><li>马丁路德·金自传</li><li>法律创世记</li><li>批评官员的尺度</li><li>林达作品集（全九册)</li><li>通往奴役之路</li><li>新教伦理与资本主义精神</li><li>追寻现代中国</li><li>太平天国</li><li>停滞的帝国</li><li>统一与分裂</li><li>寻找家园</li><li>叫魂</li><li>刘氏女</li><li>日瓦戈医生</li><li>自由及其背叛</li><li>知识分子的鸦片</li><li>古拉格之恋</li><li>科雷马故事</li><li>天朝的崩溃</li><li>知识分子</li><li>白鲸</li><li>艾希曼在耶路撒冷</li><li>路西法效应</li><li>瘟疫与人</li><li>冰点</li><li>人性七论</li><li>耳语者</li><li>奥斯维辛</li><li>返璞归真</li><li>弯曲的脊梁</li><li>公正</li><li>复活</li><li>巨流河</li><li>万历十五年</li><li>当代中国政府与政治</li><li>飞鸟集</li><li>叶赛宁</li><li>人性论</li><li>围城</li><li>政治思考</li><li>好人宋没用</li><li>舌尖上的历史</li><li>小王子</li><li>悲惨世界</li><li>艾略特</li><li>美丽剪辑</li><li>眨眼之间</li><li>剪辑之道</li></ul><h3 id="轻松阅读">轻松阅读</h3><ul><li>假装的艺术</li><li>让别人无法拒绝你</li><li>厨房里的哲学家</li><li>中国居民膳食指南</li><li>结构是什么</li><li>设计中的设计</li></ul><h3 id="社会学读物">社会学读物</h3><ul><li>虐恋亚文化</li><li>同性恋亚文化</li></ul><h3 id="心理学读物">心理学读物</h3><ul><li>亲密关系</li><li>自卑与超越</li></ul><h2 id="作者">作者</h2><h3 id="乔斯坦贾德">乔斯坦·贾德</h3><ul><li>苏菲的世界</li></ul><h3 id="莫言">莫言</h3><ul><li>酒国</li></ul><h3 id="余华">余华</h3><blockquote><p>曾看到评论说余华的写作是”普通人写作能达到的巅峰水准“，诚然，余华写的文字朴实无华，也没有炫技般的技法，但余华那颗对苦难的悲悯之心却是普通人无法拥有的。</p></blockquote><ul><li>在细雨中呼喊</li><li>活着</li></ul><h3 id="毛姆">毛姆</h3><ul><li>毛姆读书随笔</li><li>月亮与六便士</li></ul><h3 id="加缪">加缪</h3><ul><li>西西弗神话</li><li>鼠疫</li><li>局外人</li></ul><h3 id="陀思妥耶夫斯基">陀思妥耶夫斯基</h3><blockquote><p>什么是文学天才？陀思妥耶夫斯基就是文学天才。陀的个人经历坎坷，年轻时参与反沙皇革命活动，被当局命令处死，而就在即将被处死时，又被赦免，流放西伯利亚，在和罪犯一同生活几年后得到释放，继续他的写作生涯，即便是经历了死里逃生，陀个人的苦难经历也并没有结束，赌博时常缠绕着他，赌博带来的破产使他生活贫苦艰难，直至死亡。阅读陀思妥耶夫斯基大段大段的文字时常令人毛骨悚然，尤其是人物矛盾混乱的内心独白或人物对话，让人不禁怀疑，作者是否亲身经历过这些痛苦，并经过深沉的思索和反复的怀疑，最终通过鞭辟入里的文字，将自己内心最混乱不安的灵魂倾诉出来。总而言之，与其期望从我苍白无力的描述中了解陀，不如亲自拿起一本陀的书，然后接受这狂风暴雨般的文字，在这种洗礼下承认陀的伟大。</p></blockquote><ul><li>罪与罚</li><li>地下室手记</li><li>白痴</li><li>群魔</li><li>卡拉马佐夫兄弟</li><li>少年</li><li>被伤害与侮辱的人们</li><li>白夜</li></ul><h3 id="谷崎润一郎">谷崎润一郎</h3><blockquote><p>谷崎润一郎擅长描写阴翳------一种源自人心的阴暗。他对虐恋的描写入木三分，在他这里，没有常规意义下的道德拘束，只有在人性拷问下的放纵快感。</p></blockquote><ul><li>阴翳礼赞</li><li>春琴抄</li></ul><h3 id="川端康成">川端康成</h3><ul><li>古都</li><li>千只鹤</li><li>雪国</li></ul><h3 id="马尔克斯">马尔克斯</h3><ul><li>霍乱时期的爱情</li><li>百年孤独</li></ul><h3 id="卡夫卡">卡夫卡</h3><ul><li>短篇小说集</li></ul><h3 id="乔治奥威尔">乔治·奥威尔</h3><ul><li>1984</li><li>动物庄园</li></ul><h3 id="博尔赫斯">博尔赫斯</h3><blockquote><p>怎么说呢，博尔赫斯的写作技法完全是反人类的......至少是反我的。崇尚短篇小说的博尔赫斯著作极其短小，不同于其他大家的著作------仿佛一条笔直的路，博尔赫斯的小说------仿佛一座蜿蜒曲折的迷宫，充斥着虚构历史和真实历史名词，引用繁多虚构的著作增添真实性，同时也更加晦涩难懂，更不用提时常参杂哲学思辨。这些错综复杂的写作技法，让阅读短短十几页的文字，犹如西天取经般漫长和困难重重。</p></blockquote><ul><li>小径分岔的花园</li><li>恶人列传</li><li>阿莱夫</li></ul><h3 id="司汤达">司汤达</h3><ul><li>红与黑</li></ul><h3 id="卢梭">卢梭</h3><blockquote><p>非常喜欢的一位思想家和文学家，文笔清新并不落俗套。即使卢梭并没有接受过正规教育，仍展现出敏锐的洞察力和深厚的文字功底，四十多岁凭借一篇《论科学与艺术是否有助于使社会风俗日趋淳朴》一鸣惊人，可谓是“是金子总会发光”的典范。</p></blockquote><ul><li>论科学与艺术</li><li>社会契约论</li><li>爱弥儿</li><li>一个孤独散步人的梦</li><li>忏悔录</li></ul><h3 id="夏目漱石">夏目漱石</h3><ul><li>我是猫</li></ul><h3 id="阿加莎克里斯蒂">阿加莎·克里斯蒂</h3><ul><li>尼罗河惨案</li><li>东方快车谋杀案</li><li>阳光下的罪恶</li></ul><h3 id="库切">库切</h3><ul><li>耻</li></ul><h3 id="索伦克尔凯郭尔">索伦·克尔凯郭尔</h3><ul><li>非此即彼</li><li>恐惧与战栗</li></ul>]]></content>
    
    
    <categories>
      
      <category>life</category>
      
      <category>book</category>
      
    </categories>
    
    
    <tags>
      
      <tag>entertainment</tag>
      
      <tag>list</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>通过hexo建立个人博客</title>
    <link href="/2022/05/01/%E9%80%9A%E8%BF%87hexo%E5%BB%BA%E7%AB%8B%E4%B8%AA%E4%BA%BA%E5%8D%9A%E5%AE%A2/"/>
    <url>/2022/05/01/%E9%80%9A%E8%BF%87hexo%E5%BB%BA%E7%AB%8B%E4%B8%AA%E4%BA%BA%E5%8D%9A%E5%AE%A2/</url>
    
    <content type="html"><![CDATA[<h2 id="安装hexo">1 安装hexo</h2><h3 id="依赖">1.1 依赖</h3><ul><li>git</li><li>node.js</li></ul><h3 id="安装">1.2 安装</h3><figure class="highlight sh"><table><tr><td class="gutter"><div class="code-wrapper"><pre><span class="line">1</span><br></pre></div></td><td class="code"><pre><code class="hljs sh">npm install -g hexo-cli<br></code></pre></td></tr></table></figure><h2 id="使用hexo">2 使用hexo</h2><h3 id="初始化相关文件">2.1 初始化相关文件</h3><p>在指定<code>&lt;floder&gt;</code>初始化博客系统相关文件</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs bash">hexo init &lt;folder&gt;<br><span class="hljs-built_in">cd</span> &lt;folder&gt;<br>npm install<br></code></pre></td></tr></table></figure><h3 id="更新相关文件并启动项目的命令">2.2 更新相关文件并启动项目的命令</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><code class="hljs bash"><span class="hljs-comment">#清除缓存文件 (db.json) 和已生成的静态文件 (public)。</span><br>hexo clean<br><br><span class="hljs-comment">#构建生成的页面的相关的内容</span><br>hexo g<br><br><span class="hljs-comment"># 项目启动</span><br>hexo s<br><br><span class="hljs-comment">#简写</span><br>hexo clean &amp;&amp; hexo g &amp;&amp; hexo s<br></code></pre></td></tr></table></figure><h2 id="安装主题">3 安装主题</h2><h3 id="安装-1">3.1 安装</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">npm install --save hexo-theme-fluid<br></code></pre></td></tr></table></figure><p>在根目录下新建<code>_config.fluid.yml</code>文件，并复制<a href="https://github.com/fluid-dev/hexo-theme-fluid/blob/master/_config.yml">文件</a>内容到新建的文件中</p><h3 id="配置">3.2 配置</h3><p>修改根目录下<code>config.yml</code>文件内以下配置项</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs yam">theme: fluid  # 指定主题<br><br>language: zh-CN  # 指定语言，会影响主题显示的语言，按需修改<br></code></pre></td></tr></table></figure><h3 id="初始化关于页面">3.3 初始化「关于」页面</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">hexo new page about<br></code></pre></td></tr></table></figure><p>修改<code>source/about/index.md</code>添加以下配置项</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><code class="hljs mark">---<br>title: 标题<br>layout: about<br>---<br></code></pre></td></tr></table></figure><h2 id="云端部署">4 云端部署</h2><blockquote><p><a href="https://blog.csdn.net/qq_38157825/article/details/112783631">参考链接</a>，部署至gitee</p></blockquote><ul><li><p>新建仓库</p></li><li><p>新建密钥</p></li><li><p>测试连接</p></li><li><p>添加公钥</p></li><li><p>配置<code>_config.yml</code></p></li><li><p>安装<code>hexo-deployer-git</code></p></li><li><p>推送命令<code>hexo g -d</code></p></li><li><p>开启gitee pages</p></li></ul><h2 id="显示图片">5 显示图片</h2><p>修改_config.yml</p><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs yaml"><span class="hljs-attr">post_asset_folder:</span> <span class="hljs-literal">true</span><br></code></pre></td></tr></table></figure><p>下载hero-image-link插件</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">npm install hexo-image-link --save<br></code></pre></td></tr></table></figure><p>修改图片路径</p><figure class="highlight markdown"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs markdown">![<span class="hljs-string">pic</span>](<span class="hljs-link">file-name/image-name.jpg</span>)<br></code></pre></td></tr></table></figure><blockquote><p>注意图片放在和md文件同名的文件夹下</p></blockquote><h2 id="显示公式">6 显示公式</h2><p>修改主题配置文件(在本文中为<code>_config.fluid.yml</code>)</p><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><code class="hljs yaml"><span class="hljs-attr">post:</span><br><span class="hljs-attr">math:</span><br><span class="hljs-attr">enable:</span> <span class="hljs-literal">true</span><br>    <span class="hljs-attr">specific:</span> <span class="hljs-literal">true</span><span class="hljs-comment">#只有md文件front-matter（文件头部信息）里指定math: true时才会启动公式转换(加速处理)</span><br>    <span class="hljs-attr">engine:</span> <span class="hljs-string">mathjax</span><br></code></pre></td></tr></table></figure><p>更换公式渲染器（hexo原渲染器不支持复杂公式渲染）</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs bash">npm uninstall hexo-renderer-marked --save<span class="hljs-comment">#卸载原渲染器</span><br>npm install hexo-renderer-pandoc --save<span class="hljs-comment">#需要安装Pandoc</span><br></code></pre></td></tr></table></figure><h2 id="常规使用">7 常规使用</h2><ul><li><p>md文件放于source/_post文件夹下</p></li><li><p>文件头部信息格式如下</p></li></ul><figure class="highlight markdown"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><code class="hljs markdown">---<br>title: 使用Hexo搭建博客（基础版）<br>date: 2022-04-30 <br>categories:<br><span class="hljs-bullet">    -</span> 工具（父分类）<br><span class="hljs-bullet">    -</span> 博客搭建（子分类）<br>tags:<br><span class="hljs-bullet">    -</span> node<br><span class="hljs-section">math: true</span><br><span class="hljs-section">---</span><br></code></pre></td></tr></table></figure><ul><li>常用指令</li></ul><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><code class="hljs bash"><span class="hljs-comment">#本地构建预览</span><br>hexo clean &amp;&amp; hexo g &amp;&amp; hexo s<br><br><span class="hljs-comment">#发布</span><br>hexo d<br></code></pre></td></tr></table></figure><ul><li>隐藏文件</li></ul><p>在md文件头部信息中加入以下配置项</p><figure class="highlight markdown"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs markdown">---<br><span class="hljs-section">hide: true</span><br><span class="hljs-section">---</span><br></code></pre></td></tr></table></figure>]]></content>
    
    
    <categories>
      
      <category>software</category>
      
    </categories>
    
    
    <tags>
      
      <tag>learning</tag>
      
      <tag>tool</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>效率工具</title>
    <link href="/2022/05/01/%E6%95%88%E7%8E%87%E5%B7%A5%E5%85%B7/"/>
    <url>/2022/05/01/%E6%95%88%E7%8E%87%E5%B7%A5%E5%85%B7/</url>
    
    <content type="html"><![CDATA[<blockquote><p>工欲善其事，必先利其器。</p></blockquote><h2 id="文字工作">文字工作</h2><h3 id="typora">Typora</h3><p>非常出色的Markdown编辑器，无论是编辑文本、渲染排版还是格式导出(word, pdf等)都令人满意。</p><h3 id="texpad">Texpad</h3><p>LaTeX编辑器，具备即时渲染功能。</p><h3 id="mindnode">MindNode</h3><p>思维导图软件。</p><h3 id="visual-studio-code">Visual Studio Code</h3><p>文本编辑软件，同时具备许多实用的插件，对代码编写者友好。</p><h3 id="sublime-text">Sublime Text</h3><p>文本编辑软件，界面看上去十分整洁美观。</p><h3 id="reeder">Reeder</h3><p>RSS阅读器，RSS是一种反媒体资讯垄断的资讯获取方式。通过不同平台资讯的对比阅读，可以使我们更加客观全面地了解这个世界正在发生的事情。</p><h3 id="zotero">Zotero</h3><p>文献管理软件，另一款相同类型的软件是Endnote。</p><h2 id="电脑办公">电脑办公</h2><h3 id="alfred">Alfred</h3><p>快捷的操作与丰富强大的自定义功能，极大的简化了常规处理流程，以下是几个例子：</p><blockquote><p>使用command+space快捷键调出命令输入框，可自行配置快捷键</p></blockquote><ul><li><code>网站缩写</code>+ <code>检索关键词</code>，可以在不同网站上进行索引。e.g. <code>bl 新宝岛</code> <code>bing 新宝岛</code> <code>zh 新宝岛</code></li><li><code>df</code>+ <code>单词</code>，可以直接对陌生词汇进行释义查找</li><li><code>应用名称</code>，可以直接打开对应应用</li><li>Clipboard History, 功能如名称所示，可以记录复制内容</li><li>简单的计算器</li><li>Workflows, 通过便携apple提供的脚本编写自动化程序，功能十分强大</li><li>Snippets, 文本替代功能，输入一小段字符即可替代一大段字符，常用于格式化文本的便捷输入</li><li>许多其他功能......</li></ul><h3 id="dark-reader">Dark Reader</h3><p>可以对浏览器网页进行暗色调渲染，夜间浏览网页保护眼睛。</p><h3 id="downie">Downie</h3><p>在各个网站上观看视频时想要下载视频？使用Downie吧。如果你妈想让你给她下载广场舞，这个软件会帮助你解决麻烦。</p><h3 id="iina">IINA</h3><p>Mac上最杰出的视频播放器。</p><h3 id="pdf-expert">PDF Expert</h3><p>PDF阅读器。</p><h2 id="程序效率">程序效率</h2><h3 id="iterm">iTerm</h3><p>Mac上非常出色的终端程序。</p><h3 id="warp">Warp</h3><p>功能十分强大的现代终端程序</p><h2 id="实用网站">实用网站</h2><h3 id="电子书下载网站">电子书下载网站</h3><ul><li><a href="https://www.bookzz.ren">Bookszz</a></li><li><a href="https://www.gutenberg.org">Free eBooks</a></li></ul><h3 id="新闻网站">新闻网站</h3><h3 id="资源网站">资源网站</h3><ul><li><a href="http://bt.neu6.edu.cn/forum.php">六维空间</a>：东北大学pt站，主要用于下载电影</li><li><a href="https://appstorrent.ru/programs/">appstorrents</a>：Mac破解软件网站</li><li><a href="https://ca.bitznet.app/#/register">bitnets</a>：科学上网</li></ul><h3 id="学习网站">学习网站</h3><ul><li><a href="https://www.w3schools.com">w3schools</a>：鼎鼎大名的计算机学习网站</li><li><a href="https://www.geeksforgeeks.org">geeksforgeeks</a>：计算机知识学习网站</li><li><a href="https://salttiger.com">SaltTiger</a>：每天一本计算机书籍</li></ul><h3 id="工具网站">工具网站</h3><ul><li><a href="https://www.latexlive.com/home">latelive</a>：识别图片中公式，并生成LaTeX格式公式</li></ul>]]></content>
    
    
    <categories>
      
      <category>software</category>
      
    </categories>
    
    
    <tags>
      
      <tag>tool</tag>
      
      <tag>list</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>Lua学习</title>
    <link href="/2022/01/01/Lua%E5%AD%A6%E4%B9%A0/"/>
    <url>/2022/01/01/Lua%E5%AD%A6%E4%B9%A0/</url>
    
    <content type="html"><![CDATA[<h2 id="what-is-embedded-scripting-language">What is embedded scripting language?</h2><ul><li><a href="https://stackoverflow.com/questions/12042955/what-is-an-embedded-scripting-language">stackoverflow上的回答</a></li></ul><h2 id="command-line">Command line</h2><ul><li>lua -i prog.lua (enter interactive mode after execuating prog.lua)</li><li>dofile("prog.lua") (execuate prog.lua in interactive mode)</li><li>lua -e "print(19)" (execuate code in command line)</li></ul><h2 id="trick">Trick</h2><ul><li>Long comment <code>--[[  comment  ]]</code></li></ul><h2 id="reference">Reference</h2><ul><li><p><a href="https://github.com/dbohdan/embedded-scripting-languages">embedded scripting languages list</a></p></li><li><p><a href="https://stackoverflow.com/questions/1065584/what-is-data-driven-programming">data driven programming 1</a></p></li><li><p><a href="https://homepage.cs.uri.edu/~thenry/resources/unix_art/ch09s01.html">data driven programming 2</a></p></li><li><p><a href="https://www.paragoncorporation.com/ArticleDetail.aspx?ArticleID=31">different between table/data driven programming</a></p></li></ul><h2 id="questions">Questions</h2><ol type="1"><li><blockquote><p>I reserve the identifier _ (a single underscore) for <strong>dummy variables</strong>.</p></blockquote></li></ol>]]></content>
    
    
    <categories>
      
      <category>foundation of computer science</category>
      
      <category>programming language</category>
      
      <category>Lua</category>
      
    </categories>
    
    
    <tags>
      
      <tag>learning</tag>
      
    </tags>
    
  </entry>
  
  
  
  
</search>
